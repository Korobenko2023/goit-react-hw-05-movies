{"version":3,"file":"static/js/407.75f463e1.chunk.js","mappings":"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","sources":["Pages/Home/Home.styled.js","Pages/Home/Home.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","components/Services/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const HomeDiv = styled.div`\npadding: ${p => p.theme.spasing(4)};\n`;\n\nexport const HomeTitle = styled.h2`\nmargin-bottom: ${p => p.theme.spasing(2)};\n`;","import { Loader } from \"components/Loader/Loader\";\nimport { MoviesList } from \"components/MoviesList/MoviesList\";\nimport { useEffect, useState } from \"react\";\nimport { HomeDiv, HomeTitle } from \"./Home.styled\";\nimport toast from \"react-hot-toast\";\nimport { fetchTrendingMovies } from \"components/Services/Api\";\n\nexport default function Home() {\n    const [movies, setMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        const getFilms = async () => {\n\n            setIsLoading(true);\n            try {\n                const moviesTrening = await fetchTrendingMovies();\n                if (moviesTrening.length === 0) {\n                    toast.error('Oops! Something went wrong. Please try again later.');\n                    return;\n                }\n                setMovies(moviesTrening);\n            } catch (error) {\n                toast.error('Oops! Something went wrong. Please try again later.', error);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n   \n        getFilms();\n    \n    }, []);  \n\n    return (\n    <HomeDiv>\n      <HomeTitle>Trending today</HomeTitle>\n      {movies.length > 0 && <MoviesList movies={movies} />}\n      {isLoading && <Loader/>}\n    </HomeDiv>\n  );\n\n};","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MoviesUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const MoviesLink = styled(Link)` \n    color: ${p => p.theme.colors.black}; \n    font-size: 18px;\n   &:hover,\n  :focus {\n    color: ${p => p.theme.colors.MediumBlue};     \n  }\n`;","import { useLocation } from \"react-router-dom\";\nimport { MoviesLink, MoviesUl } from \"./MoviesList.styled\";\n\nexport const MoviesList = ({ movies }) => {\n    const location = useLocation();\n    return (\n        <MoviesUl>\n            {movies.map(({ id, original_title }) => (\n                <li key={id}>\n                    <MoviesLink to={`/movies/${id}`} state={{ from: location }}> \n                        {original_title}\n                    </MoviesLink>\n                </li>\n            ))}\n        </MoviesUl>\n    )\n\n};\n\n","import axios from \"axios\";\n axios.defaults.baseURL = 'https://api.themoviedb.org/3';\n const API_KEY = 'da8b391557d6a67d7aa1304dede81c1a';\nexport const fetchTrendingMovies = async () => {   \n    try {\n        const params = {\n            api_key: API_KEY,\n            language: 'en-US',\n        };\n        const { data } = await axios.get(`/trending/all/day`, { params });\n    return data.results;\n    } catch (error) {\n        throw error;\n    }   \n}\n\nexport const fetchMovies = async (query) => {   \n    try {\n        const params = {\n            api_key: API_KEY,\n            query: query,\n            include_adult: false,\n            language: 'en-US',\n            page: 1,\n        };\n        const { data } = await axios.get(`/search/movie`, { params });\n   return data.results;\n    } catch (error) {\n        throw error;\n    }   \n}\n\nexport const fetchMovieDetails = async (movieId) => {\n    try {\n        const params = {\n            api_key: API_KEY,\n            language: 'en-US',\n        };\n        const { data } = await axios.get(`/movie/${movieId}`, { params });\n        return data;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport const fetchMovieCast = async (movieId) => {   \n    try {\n        const params = {\n            api_key: API_KEY,           \n            language: 'en-US',\n        };\n        const { data } = await axios.get(`/movie/${movieId}/credits`, { params });\n      return data.cast;\n    } catch (error) {\n        throw error;\n    }   \n}\n\nexport const fetchMovieReviews = async (movieId) => {   \n    try {\n        const params = {\n            api_key: API_KEY,           \n            language: 'en-US',\n            page: 1,\n        };\n        const { data } = await axios.get(`/movie/${movieId}/reviews`, { params });\n     return data.results;\n    } catch (error) {\n        throw error;\n    }   \n}\n\n\n\n"],"names":["HomeDiv","styled","_templateObject","_taggedTemplateLiteral","p","theme","spasing","HomeTitle","_templateObject2","Home","movies","setMovies","useState","isLoading","setIsLoading","useEffect","async","moviesTrening","fetchTrendingMovies","length","toast","error","getFilms","_jsxs","children","_jsx","MoviesList","Loader","MoviesUl","MoviesLink","Link","colors","black","MediumBlue","_ref","location","useLocation","map","_ref2","id","original_title","to","concat","state","from","axios","API_KEY","params","api_key","language","data","results","fetchMovies","query","include_adult","page","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}