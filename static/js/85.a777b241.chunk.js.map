{"version":3,"file":"static/js/85.a777b241.chunk.js","mappings":"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","sources":["components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.js","Pages/Movies/Movies.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","components/Services/Api.js"],"sourcesContent":["import styled from 'styled-components';\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  max-width: 600px;\n  gap: ${p => p.theme.spasing(1)};\n  overflow: hidden;\n`;\n  \nexport const SearchInput = styled.input`\n  padding-bottom: ${p => p.theme.spasing(1)};  \n  padding-left: ${p => p.theme.spasing(2)};  \n  width: 100%;\n  height: 40px;\n  font-size: 20px;\n  border: 1px solid black;\n  border-radius: ${p => p.theme.radii.sm};\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1); \n  &:hover,\n  &:focus,\n  &.active {\n    border-color: ${p => p.theme.colors.MediumBlue}; \n  }\n  outline: none; \n  &::placeholder {\n    font-size: 16px;\n    padding-left: ${p => p.theme.spasing(2)};  \n   \n  }\n`;\n\nexport const SearchButton = styled.button`\n  padding-bottom: ${p => p.theme.spasing(1)};  \n  width: 200px;\n  height: 40px;\n  border: 1px solid black;\n  border-radius: ${p => p.theme.radii.sm};\n  outline: none;\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1); \n  &:hover,\n  &:focus {\n    border-color: ${p => p.theme.colors.MediumBlue}; \n  } \n`;","import { useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport { SearchButton, SearchForm, SearchInput } from \"./Searchbar.styled\";\n\nexport const Searchbar = ({ setSearchParams }) => {\n    const [query, setQuery] = useState('');\n  \n    const handleSearch = (e) => {\n        setQuery(e.target.value.toLowerCase());\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (query.trim() === '') {\n            toast.error(\"Please fill the field!\");\n            return;\n        }\n        setSearchParams({ query });\n        setQuery('');\n    };\n \n    return (\n        <SearchForm onSubmit={handleSubmit}>\n          <SearchInput\n            name=\"searchQuery\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            value={query}\n            onChange={handleSearch}\n            />\n          <SearchButton type=\"submit\">Search</SearchButton>\n        </SearchForm>\n    );\n};","import { Loader } from \"components/Loader/Loader\";\nimport { MoviesList } from \"components/MoviesList/MoviesList\";\nimport { Searchbar } from \"components/Searchbar/Searchbar\";\nimport { fetchMovies } from \"components/Services/Api\";\nimport { useEffect, useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport { useSearchParams } from \"react-router-dom\";\n\nexport default function Movies() {\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [isLoading, setIsLoading] = useState(false);\n    const currentQuery = searchParams.get('query') ?? '';\n\n    useEffect(() => {       \n        if (!currentQuery) return;\n\n        const searchFilms = async () => {\n\n              setIsLoading(true);\n\n            try {\n                const moviesQuery = await fetchMovies(currentQuery);\n                if (moviesQuery.length === 0) {\n                    toast.error('Sorry, there are no movies matching your search query. Please try again..');\n                    return;\n                }\n                setMovies(moviesQuery);\n            } catch (error) {\n                toast.error('Oops! Something went wrong. Please try again later.', error);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n   \n        searchFilms();\n    \n    }, [currentQuery]);  \n\n return (\n    <>\n         <Searchbar setSearchParams={setSearchParams} />\n         {isLoading && <Loader/>}\n         <MoviesList movies={movies} />\n    </>\n    )\n\n};","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MoviesUl = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${p => p.theme.spasing(5)};\n  margin-left: ${p => p.theme.spasing(5)};\n  margin-top: ${p => p.theme.spasing(5)};\n`;\n\nexport const MoviesLi = styled.li`\n  max-width: 160px;\n`;\n\nexport const MoviesLink = styled(NavLink)` \n    color: ${p => p.theme.colors.black}; \n    font-size: 18px;\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n   &:hover,\n   &:focus {\n    color: ${p => p.theme.colors.MediumBlue};     \n  }\n`;\n\nexport const Title = styled.p`  \n  margin-top: ${p => p.theme.spasing(3)};\n  font-size: 16px;\n  font-weight: 500;\n  text-align: center;\n`;\n","import { useLocation } from \"react-router-dom\";\nimport { MoviesLi, MoviesLink, MoviesUl, Title } from \"./MoviesList.styled\";\n\nexport const MoviesList = ({ movies }) => {\n    const location = useLocation();\n    return (\n        <MoviesUl>\n            {movies.map(({ id, name, title, poster_path }) => (\n                <MoviesLi key={id}>\n                    <MoviesLink to={`/movies/${id}`} state={{ from: location }}> \n                        <img src={poster_path\n                            ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                            : 'https://image.tmdb.org/t/p/original//nQvoM7BMswq1raENOkOjCBt94gk.jpg'\n                        }\n                            alt={name || title}\n                            width={160} height={240}\n                    />\n                     <Title>{name || title}</Title>\n                    </MoviesLink>\n                </MoviesLi>\n            ))}\n        </MoviesUl>\n    )\n\n};\n\n","import axios from \"axios\";\n axios.defaults.baseURL = 'https://api.themoviedb.org/3';\n const API_KEY = 'da8b391557d6a67d7aa1304dede81c1a';\nexport const fetchTrendingMovies = async () => {   \n    try {\n        const params = {\n            api_key: API_KEY,\n            language: 'en-US',\n        };\n        const { data } = await axios.get(`/trending/all/day`, { params });\n    return data.results;\n    } catch (error) {\n        throw error;\n    }   \n}\n\nexport const fetchMovies = async (query) => {   \n    try {\n        const params = {\n            api_key: API_KEY,\n            query: query,\n            include_adult: false,\n            language: 'en-US',\n            page: 1,\n        };\n        const { data } = await axios.get(`/search/movie`, { params });\n   return data.results;\n    } catch (error) {\n        throw error;\n    }   \n}\n\nexport const fetchMovieDetails = async (movieId) => {\n    try {\n        const params = {\n            api_key: API_KEY,\n            language: 'en-US',\n        };\n        const { data } = await axios.get(`/movie/${movieId}`, { params });\n        return data;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport const fetchMovieCast = async (movieId) => {   \n    try {\n        const params = {\n            api_key: API_KEY,           \n            language: 'en-US',\n        };\n        const { data } = await axios.get(`/movie/${movieId}/credits`, { params });\n      return data.cast;\n    } catch (error) {\n        throw error;\n    }   \n}\n\nexport const fetchMovieReviews = async (movieId) => {   \n    try {\n        const params = {\n            api_key: API_KEY,           \n            language: 'en-US',\n            page: 1,\n        };\n        const { data } = await axios.get(`/movie/${movieId}/reviews`, { params });\n     return data.results;\n    } catch (error) {\n        throw error;\n    }   \n}\n\n\n\n"],"names":["SearchForm","styled","_templateObject","_taggedTemplateLiteral","p","theme","spasing","SearchInput","_templateObject2","radii","sm","colors","MediumBlue","SearchButton","_templateObject3","Searchbar","_ref","setSearchParams","query","setQuery","useState","_jsxs","onSubmit","e","preventDefault","trim","toast","children","_jsx","name","type","autoComplete","autoFocus","placeholder","value","onChange","target","toLowerCase","Movies","_searchParams$get","movies","setMovies","searchParams","useSearchParams","isLoading","setIsLoading","currentQuery","get","useEffect","async","moviesQuery","fetchMovies","length","error","searchFilms","_Fragment","Loader","MoviesList","MoviesUl","MoviesLi","MoviesLink","NavLink","black","Title","_templateObject4","location","useLocation","map","_ref2","id","title","poster_path","to","concat","state","from","src","alt","width","height","axios","API_KEY","fetchTrendingMovies","params","api_key","language","data","results","include_adult","page","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}