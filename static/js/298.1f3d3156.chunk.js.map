{"version":3,"file":"static/js/298.1f3d3156.chunk.js","mappings":"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","sources":["../node_modules/react-particles/esm/Utils.js","../node_modules/react-particles/esm/Particles.js","../node_modules/react-particles/esm/index.js","../node_modules/tsparticles-engine/esm/Core/Utils/Circle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Constants.js","../node_modules/tsparticles-engine/esm/Core/Utils/Range.js","../node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Vector.js","../node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js","../node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Random.js","../node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js","../node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js","../node_modules/tsparticles-engine/esm/Utils/ColorUtils.js","../node_modules/tsparticles-engine/esm/Utils/NumberUtils.js","../node_modules/tsparticles-engine/esm/Utils/Utils.js","../node_modules/tsparticles-engine/esm/Core/Canvas.js","../node_modules/tsparticles-engine/esm/Core/Utils/EventListeners.js","../node_modules/tsparticles-engine/esm/Options/Classes/Background/Background.js","../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMaskCover.js","../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMask.js","../node_modules/tsparticles-engine/esm/Options/Classes/FullScreen/FullScreen.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ClickEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/DivEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Parallax.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/HoverEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ResizeEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Events.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Modes/Modes.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js","../node_modules/tsparticles-engine/esm/Options/Classes/ManualParticle.js","../node_modules/tsparticles-engine/esm/Options/Classes/Responsive.js","../node_modules/tsparticles-engine/esm/Options/Classes/Theme/ThemeDefault.js","../node_modules/tsparticles-engine/esm/Options/Classes/Theme/Theme.js","../node_modules/tsparticles-engine/esm/Options/Classes/ColorAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/HslAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/AnimatableColor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsOverlap.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounce.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/Collisions.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAngle.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAttract.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveCenter.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveGravity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Path/MovePath.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrailFill.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrail.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/OutModes.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Spin.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js","../node_modules/tsparticles-engine/esm/Options/Classes/AnimationOptions.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/OpacityAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/Opacity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesDensity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesNumber.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shadow.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/SizeAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/Size.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Stroke.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ZIndex/ZIndex.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ParticlesOptions.js","../node_modules/tsparticles-engine/esm/Utils/OptionsUtils.js","../node_modules/tsparticles-engine/esm/Options/Classes/Options.js","../node_modules/tsparticles-engine/esm/Core/Utils/InteractionManager.js","../node_modules/tsparticles-engine/esm/Core/Particle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Point.js","../node_modules/tsparticles-engine/esm/Core/Utils/QuadTree.js","../node_modules/tsparticles-engine/esm/Core/Particles.js","../node_modules/tsparticles-engine/esm/Core/Retina.js","../node_modules/tsparticles-engine/esm/Core/Container.js","../node_modules/tsparticles-engine/esm/Utils/EventDispatcher.js","../node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js","../node_modules/tsparticles-engine/esm/Core/Engine.js","../node_modules/tsparticles-engine/esm/Utils/HslColorManager.js","../node_modules/tsparticles-engine/esm/Utils/RgbColorManager.js","../node_modules/tsparticles-engine/esm/index.js","../node_modules/tsparticles-engine/esm/init.js","../node_modules/tsparticles-particles.js/esm/marcbruederlin/Particles.js","../node_modules/tsparticles-particles.js/esm/VincentGarreau/particles.js","../node_modules/tsparticles-particles.js/esm/index.js","../node_modules/tsparticles-move-base/esm/Utils.js","../node_modules/tsparticles-move-base/esm/BaseMover.js","../node_modules/tsparticles-move-base/esm/index.js","../node_modules/tsparticles-shape-circle/esm/CircleDrawer.js","../node_modules/tsparticles-shape-circle/esm/index.js","../node_modules/tsparticles-updater-color/esm/Utils.js","../node_modules/tsparticles-updater-color/esm/ColorUpdater.js","../node_modules/tsparticles-updater-color/esm/index.js","../node_modules/tsparticles-updater-opacity/esm/OpacityUpdater.js","../node_modules/tsparticles-updater-opacity/esm/Utils.js","../node_modules/tsparticles-updater-opacity/esm/index.js","../node_modules/tsparticles-updater-out-modes/esm/BounceOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/Utils.js","../node_modules/tsparticles-updater-out-modes/esm/DestroyOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/NoneOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/OutOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/OutOfCanvasUpdater.js","../node_modules/tsparticles-updater-out-modes/esm/index.js","../node_modules/tsparticles-updater-size/esm/SizeUpdater.js","../node_modules/tsparticles-updater-size/esm/Utils.js","../node_modules/tsparticles-updater-size/esm/index.js","../node_modules/tsparticles-basic/esm/index.js","../node_modules/tsparticles-plugin-easing-quad/esm/index.js","../node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js","../node_modules/tsparticles-interaction-external-attract/esm/Options/Classes/Attract.js","../node_modules/tsparticles-interaction-external-attract/esm/Attractor.js","../node_modules/tsparticles-interaction-external-attract/esm/index.js","../node_modules/tsparticles-interaction-external-bounce/esm/Options/Classes/Bounce.js","../node_modules/tsparticles-interaction-external-bounce/esm/Bouncer.js","../node_modules/tsparticles-interaction-external-bounce/esm/index.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleBase.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleDiv.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/Bubble.js","../node_modules/tsparticles-interaction-external-bubble/esm/Utils.js","../node_modules/tsparticles-interaction-external-bubble/esm/Bubbler.js","../node_modules/tsparticles-interaction-external-bubble/esm/index.js","../node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/ConnectLinks.js","../node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/Connect.js","../node_modules/tsparticles-interaction-external-connect/esm/Utils.js","../node_modules/tsparticles-interaction-external-connect/esm/Connector.js","../node_modules/tsparticles-interaction-external-connect/esm/index.js","../node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/GrabLinks.js","../node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/Grab.js","../node_modules/tsparticles-interaction-external-grab/esm/Utils.js","../node_modules/tsparticles-interaction-external-grab/esm/Grabber.js","../node_modules/tsparticles-interaction-external-grab/esm/index.js","../node_modules/tsparticles-interaction-external-pause/esm/Pauser.js","../node_modules/tsparticles-interaction-external-pause/esm/index.js","../node_modules/tsparticles-interaction-external-push/esm/Options/Classes/Push.js","../node_modules/tsparticles-interaction-external-push/esm/Pusher.js","../node_modules/tsparticles-interaction-external-push/esm/index.js","../node_modules/tsparticles-interaction-external-remove/esm/Options/Classes/Remove.js","../node_modules/tsparticles-interaction-external-remove/esm/Remover.js","../node_modules/tsparticles-interaction-external-remove/esm/index.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseBase.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseDiv.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/Repulse.js","../node_modules/tsparticles-interaction-external-repulse/esm/Repulser.js","../node_modules/tsparticles-interaction-external-repulse/esm/index.js","../node_modules/tsparticles-interaction-external-slow/esm/Options/Classes/Slow.js","../node_modules/tsparticles-interaction-external-slow/esm/Slower.js","../node_modules/tsparticles-interaction-external-slow/esm/index.js","../node_modules/tsparticles-shape-image/esm/GifUtils/Constants.js","../node_modules/tsparticles-shape-image/esm/GifUtils/ByteStream.js","../node_modules/tsparticles-shape-image/esm/GifUtils/Utils.js","../node_modules/tsparticles-shape-image/esm/Utils.js","../node_modules/tsparticles-shape-image/esm/ImageDrawer.js","../node_modules/tsparticles-shape-image/esm/Options/Classes/Preload.js","../node_modules/tsparticles-shape-image/esm/ImagePreloader.js","../node_modules/tsparticles-shape-image/esm/index.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDelay.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDuration.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/Life.js","../node_modules/tsparticles-updater-life/esm/LifeUpdater.js","../node_modules/tsparticles-updater-life/esm/index.js","../node_modules/tsparticles-shape-line/esm/LineDrawer.js","../node_modules/tsparticles-shape-line/esm/index.js","../node_modules/tsparticles-move-parallax/esm/ParallaxMover.js","../node_modules/tsparticles-move-parallax/esm/index.js","../node_modules/tsparticles-engine/esm/Core/Utils/ParticlesInteractorBase.js","../node_modules/tsparticles-interaction-particles-attract/esm/Attractor.js","../node_modules/tsparticles-interaction-particles-attract/esm/index.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Absorb.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Bounce.js","../node_modules/tsparticles-interaction-particles-collisions/esm/ResolveCollision.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Destroy.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Collider.js","../node_modules/tsparticles-interaction-particles-collisions/esm/index.js","../node_modules/tsparticles-interaction-particles-links/esm/CircleWarp.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksShadow.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksTriangle.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/Links.js","../node_modules/tsparticles-interaction-particles-links/esm/Linker.js","../node_modules/tsparticles-interaction-particles-links/esm/interaction.js","../node_modules/tsparticles-interaction-particles-links/esm/Utils.js","../node_modules/tsparticles-interaction-particles-links/esm/LinkInstance.js","../node_modules/tsparticles-interaction-particles-links/esm/plugin.js","../node_modules/tsparticles-interaction-particles-links/esm/index.js","../node_modules/tsparticles-shape-polygon/esm/PolygonDrawerBase.js","../node_modules/tsparticles-shape-polygon/esm/PolygonDrawer.js","../node_modules/tsparticles-shape-polygon/esm/TriangleDrawer.js","../node_modules/tsparticles-shape-polygon/esm/index.js","../node_modules/tsparticles-updater-rotate/esm/Options/Classes/RotateAnimation.js","../node_modules/tsparticles-updater-rotate/esm/Options/Classes/Rotate.js","../node_modules/tsparticles-updater-rotate/esm/RotateUpdater.js","../node_modules/tsparticles-updater-rotate/esm/index.js","../node_modules/tsparticles-shape-square/esm/SquareDrawer.js","../node_modules/tsparticles-shape-square/esm/index.js","../node_modules/tsparticles-shape-star/esm/StarDrawer.js","../node_modules/tsparticles-shape-star/esm/index.js","../node_modules/tsparticles-updater-stroke-color/esm/Utils.js","../node_modules/tsparticles-updater-stroke-color/esm/StrokeColorUpdater.js","../node_modules/tsparticles-updater-stroke-color/esm/index.js","../node_modules/tsparticles-shape-text/esm/TextDrawer.js","../node_modules/tsparticles-shape-text/esm/index.js","../node_modules/tsparticles-slim/esm/index.js"],"sourcesContent":["const isObject = (val) => typeof val === \"object\" && val !== null;\nexport function deepCompare(obj1, obj2, excludeKeyFn = () => false) {\n    if (!isObject(obj1) || !isObject(obj2)) {\n        return obj1 === obj2;\n    }\n    const keys1 = Object.keys(obj1).filter(key => !excludeKeyFn(key)), keys2 = Object.keys(obj2).filter(key => !excludeKeyFn(key));\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const value1 = obj1[key], value2 = obj2[key];\n        if (isObject(value1) && isObject(value2)) {\n            if (value1 === obj2 && value2 === obj1) {\n                continue;\n            }\n            if (!deepCompare(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (Array.isArray(value1) && Array.isArray(value2)) {\n            if (!deepCompareArrays(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (value1 !== value2) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction deepCompareArrays(arr1, arr2, excludeKeyFn) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        const val1 = arr1[i], val2 = arr2[i];\n        if (Array.isArray(val1) && Array.isArray(val2)) {\n            if (!deepCompareArrays(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (isObject(val1) && isObject(val2)) {\n            if (!deepCompare(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (val1 !== val2) {\n            return false;\n        }\n    }\n    return true;\n}\n","import React, { Component } from \"react\";\nimport { tsParticles } from \"tsparticles-engine\";\nimport { deepCompare } from \"./Utils\";\nconst defaultId = \"tsparticles\";\nclass Particles extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            init: false,\n            library: undefined,\n        };\n    }\n    destroy() {\n        if (!this.state.library) {\n            return;\n        }\n        this.state.library.destroy();\n        this.setState({\n            library: undefined,\n        });\n    }\n    shouldComponentUpdate(nextProps) {\n        const nextOptions = nextProps.options ?? nextProps.params, currentOptions = this.props.options ?? this.props.params;\n        return (nextProps.url !== this.props.url ||\n            nextProps.id !== this.props.id ||\n            nextProps.canvasClassName !== this.props.canvasClassName ||\n            nextProps.className !== this.props.className ||\n            nextProps.height !== this.props.height ||\n            nextProps.width !== this.props.width ||\n            !deepCompare(nextProps.style, this.props.style) ||\n            nextProps.init !== this.props.init ||\n            nextProps.loaded !== this.props.loaded ||\n            !deepCompare(nextOptions, currentOptions, key => key.startsWith(\"_\")));\n    }\n    componentDidUpdate() {\n        this.refresh();\n    }\n    forceUpdate() {\n        this.refresh().then(() => {\n            super.forceUpdate();\n        });\n    }\n    componentDidMount() {\n        (async () => {\n            if (this.props.init) {\n                await this.props.init(tsParticles);\n            }\n            this.setState({\n                init: true,\n            }, async () => {\n                await this.loadParticles();\n            });\n        })();\n    }\n    componentWillUnmount() {\n        this.destroy();\n    }\n    render() {\n        const { width, height, className, canvasClassName, id } = this.props;\n        return (React.createElement(\"div\", { className: className, id: id },\n            React.createElement(\"canvas\", { className: canvasClassName, style: {\n                    ...this.props.style,\n                    width,\n                    height,\n                } })));\n    }\n    async refresh() {\n        this.destroy();\n        await this.loadParticles();\n    }\n    async loadParticles() {\n        if (!this.state.init) {\n            return;\n        }\n        const id = this.props.id ?? Particles.defaultProps.id ?? defaultId, container = await tsParticles.load({\n            url: this.props.url,\n            id,\n            options: this.props.options ?? this.props.params,\n        });\n        if (this.props.container) {\n            this.props.container.current = container;\n        }\n        this.setState({\n            library: container,\n        });\n        if (this.props.loaded) {\n            await this.props.loaded(container);\n        }\n    }\n}\nParticles.defaultProps = {\n    width: \"100%\",\n    height: \"100%\",\n    options: {},\n    style: {},\n    url: undefined,\n    id: defaultId,\n};\nexport default Particles;\n","import Particles from \"./Particles\";\nexport default Particles;\nexport { Particles };\n","import { Range } from \"./Range\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle) {\n            const rSum = r + range.radius, dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\n            return rSum > dist;\n        }\n        else if (range instanceof Rectangle) {\n            const { width, height } = range.size, edges = Math.pow(distPos.x - width, 2) + Math.pow(distPos.y - height, 2);\n            return (edges <= r ** 2 ||\n                (distPos.x <= r + width && distPos.y <= r + height) ||\n                distPos.x <= width ||\n                distPos.y <= height);\n        }\n        return false;\n    }\n}\n","export const generatedAttribute = \"generated\";\nexport const mouseDownEvent = \"pointerdown\";\nexport const mouseUpEvent = \"pointerup\";\nexport const mouseLeaveEvent = \"pointerleave\";\nexport const mouseOutEvent = \"pointerout\";\nexport const mouseMoveEvent = \"pointermove\";\nexport const touchStartEvent = \"touchstart\";\nexport const touchEndEvent = \"touchend\";\nexport const touchMoveEvent = \"touchmove\";\nexport const touchCancelEvent = \"touchcancel\";\nexport const resizeEvent = \"resize\";\nexport const visibilityChangeEvent = \"visibilitychange\";\nexport const errorPrefix = \"tsParticles - Error\";\n","export class Range {\n    constructor(x, y) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Range } from \"./Range\";\nexport class Rectangle extends Range {\n    constructor(x, y, width, height) {\n        super(x, y);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","import { Vector3d } from \"./Vector3d\";\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, 0);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { errorPrefix } from \"./Constants\";\nimport { isNumber } from \"../../Utils/Utils\";\nexport class Vector3d {\n    constructor(xOrCoords, y, z) {\n        this._updateFromAngle = (angle, length) => {\n            this.x = Math.cos(angle) * length;\n            this.y = Math.sin(angle) * length;\n        };\n        if (!isNumber(xOrCoords) && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : 0;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z ?? 0;\n        }\n        else {\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n        }\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this._updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this._updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    normalize() {\n        const length = this.length;\n        if (length != 0) {\n            this.multTo(1.0 / length);\n        }\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : 0;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nexport class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if (data?.value === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\n","export class Random {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n    }\n}\n","import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions\";\nimport { Random } from \"./Random\";\nimport { isBoolean } from \"../../Utils/Utils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ValueWithRandom {\n    constructor() {\n        this.random = new Random();\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (isBoolean(data.random)) {\n            this.random.enable = data.random;\n        }\n        else {\n            this.random.load(data.random);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value, this.random.enable ? this.random.minimumValue : undefined);\n        }\n    }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new AnimationOptions();\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RangedAnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, 0, 0, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data;\n    const pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, transformData = {\n        a: rotateData.cos * (transform.a ?? 1),\n        b: rotateData.sin * (transform.b ?? 1),\n        c: -rotateData.sin * (transform.c ?? 1),\n        d: rotateData.cos * (transform.d ?? 1),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    context.beginPath();\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = particle.strokeWidth ?? 0;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (strokeWidth > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.globalCompositeOperation = \"source-over\";\n    context.setTransform(1, 0, 0, 1, 0, 0);\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer || !drawer.afterEffect) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n","import { getRandom, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils\";\nimport { isArray, isString, itemFromArray } from \"./Utils\";\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\nexport function addColorManager(manager) {\n    colorManagers.set(manager.key, manager);\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    for (const [, manager] of colorManagers) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed);\n    return result\n        ? {\n            a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n            b: parseInt(result[3], 16),\n            g: parseInt(result[2], 16),\n            r: parseInt(result[1], 16),\n        }\n        : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / 255, g1 = color.g / 255, b1 = color.b / 255, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: 0,\n        l: (max + min) / 2,\n        s: 0,\n    };\n    if (max !== min) {\n        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n    }\n    res.l *= 100;\n    res.s *= 100;\n    res.h *= 60;\n    if (res.h < 0) {\n        res.h += 360;\n    }\n    if (res.h >= 360) {\n        res.h -= 360;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    return stringToRgba(input)?.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const result = { b: 0, g: 0, r: 0 }, hslPercent = {\n        h: hsl.h / 360,\n        l: hsl.l / 100,\n        s: hsl.s / 100,\n    };\n    if (!hslPercent.s) {\n        result.r = result.g = result.b = hslPercent.l;\n    }\n    else {\n        const q = hslPercent.l < 0.5\n            ? hslPercent.l * (1 + hslPercent.s)\n            : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s, p = 2 * hslPercent.l - q;\n        result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n        result.g = hue2rgb(p, q, hslPercent.h);\n        result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n    }\n    result.r = Math.floor(result.r * 255);\n    result.g = Math.floor(result.g * 255);\n    result.b = Math.floor(result.b * 255);\n    return result;\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min ?? 0;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? 1})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? 1})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb({\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / 100) * reduceFactor;\n        colorValue.decay = 1 - getRangeValue(colorAnimation.decay);\n        colorValue.status = \"increasing\";\n        colorValue.loops = 0;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = 0;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * 1000;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n    }\n    else {\n        colorValue.velocity = 0;\n    }\n}\n","import { isBoolean, isNumber } from \"./Utils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nlet _random = Math.random;\nconst easings = new Map();\nexport function addEasing(name, easing) {\n    if (easings.get(name)) {\n        return;\n    }\n    easings.set(name, easing);\n}\nexport function getEasing(name) {\n    return easings.get(name) || ((value) => value);\n}\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    return clamp(_random(), 0, 1 - 1e-16);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r);\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = 0;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getValue(options) {\n    const random = options.random, { enable, minimumValue } = isBoolean(random)\n        ? {\n            enable: random,\n            minimumValue: 0,\n        }\n        : random;\n    return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** 2 + dy ** 2) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return (direction * Math.PI) / 180;\n    }\n    switch (direction) {\n        case \"top\":\n            return -Math.PI / 2;\n        case \"top-right\":\n            return -Math.PI / 4;\n        case \"right\":\n            return 0;\n        case \"bottom-right\":\n            return Math.PI / 4;\n        case \"bottom\":\n            return Math.PI / 2;\n        case \"bottom-left\":\n            return (3 * Math.PI) / 4;\n        case \"left\":\n            return Math.PI;\n        case \"top-left\":\n            return (-3 * Math.PI) / 4;\n        case \"inside\":\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case \"outside\":\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * Math.PI * 2;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position && data.position.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / 100,\n            y: (data.position.y * data.size.height) / 100,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * 100) * data.size.width) / 100,\n        y: ((data.position?.y ?? getRandom() * 100) * data.size.height) / 100,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    return input ? (input.endsWith(\"%\") ? parseFloat(input) / 100 : parseFloat(input)) : 1;\n}\n","import { collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, } from \"./NumberUtils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data;\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, (selector) => {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some((t) => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    return value === array || (isArray(array) && array.indexOf(value) > -1);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    return areBoundsInside(calculateBounds(point, radius ?? 0), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === \"bottom\") {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === \"left\")) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === \"right\")) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === \"top\")) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) && Array.isArray(value)\n                    ? value.map((v) => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, (t) => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, (div) => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, (selector) => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, (div) => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getValue(p.options.bounce.horizontal), getValue(p.options.bounce.vertical)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1);\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < 0) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getValue(particle.options.bounce.horizontal),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getValue(particle.options.bounce.vertical),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, 0);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.find((t, index) => callback(t, index)) : callback(obj, 0) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * 1000,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    };\n    if (animationOptions.enable) {\n        res.decay = 1 - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case \"increase\":\n                res.status = \"increasing\";\n                break;\n            case \"decrease\":\n                res.status = \"decreasing\";\n                break;\n            case \"random\":\n                res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                break;\n        }\n        const autoStatus = animationOptions.mode === \"auto\";\n        switch (animationOptions.startValue) {\n            case \"min\":\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = \"increasing\";\n                }\n                break;\n            case \"max\":\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = \"decreasing\";\n                }\n                break;\n            case \"random\":\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === \"percent\";\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / 100) * canvasSize.width,\n            y: (positionOrSize.y / 100) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / 100) * canvasSize.width,\n            height: (positionOrSize.height / 100) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nexport function isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n    return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n    return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n    return Array.isArray(arg);\n}\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = (particle) => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw && updater.afterDraw(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw && updater.beforeDraw(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize && plugin.resize();\n            }\n        };\n        this._getPluginParticleColors = (particle) => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n            if (coverRgb) {\n                const coverColor = {\n                    ...coverRgb,\n                    a: cover.opacity,\n                };\n                this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                const trail = options.particles.move.trail;\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity: 1 / trail.length,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity: 1 / trail.length,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = (baseColor) => {\n            this.draw((ctx) => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw((ctx) => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver((observer) => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver((observer) => observer.observe(element, { attributes: true }));\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            const style = element.style;\n            style.position = originalStyle.position;\n            style.zIndex = originalStyle.zIndex;\n            style.top = originalStyle.top;\n            style.left = originalStyle.left;\n            style.width = originalStyle.width;\n            style.height = originalStyle.height;\n        };\n        this._safeMutationObserver = (callback) => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const priority = \"important\", style = element.style;\n            style.setProperty(\"position\", \"fixed\", priority);\n            style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n            style.setProperty(\"top\", \"0\", priority);\n            style.setProperty(\"left\", \"0\", priority);\n            style.setProperty(\"width\", \"100%\", priority);\n            style.setProperty(\"height\", \"100%\", priority);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element && element.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? 1, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = safeMutationObserver((records) => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw((ctx) => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, (mode) => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                setTimeout(() => this._mouseTouchFinish(), 500);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n            if (theme && theme.default.auto) {\n                container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document && document.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.getAnimationStatus()) {\n                    container.play(true);\n                }\n                else {\n                    container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = async () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            this._resizeTimeout = setTimeout(async () => {\n                const canvas = this.container.canvas;\n                canvas && (await canvas.windowResize());\n            }, this.container.actualOptions.interactivity.events.resize.delay * 1000);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            const interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === \"window\") {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === \"parent\" && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = (add) => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver(async (entries) => {\n                    const entry = entries.find((e) => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    await this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = (e) => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity || !interactivity.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === \"parent\") {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - 1], canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? 0),\n                        y: lastTouch.clientY - (canvasRect.top ?? 0),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { BackgroundMaskCover } from \"./BackgroundMaskCover\";\nimport { isString } from \"../../../Utils/Utils\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover;\n            const color = (isString(data.cover) ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","export class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","export class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = \"circle\";\n    }\n    get el() {\n        return this.elementId;\n    }\n    set el(value) {\n        this.elementId = value;\n    }\n    get elementId() {\n        return this.ids;\n    }\n    set elementId(value) {\n        this.ids = value;\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const ids = data.ids ?? data.elementId ?? data.el;\n        if (ids !== undefined) {\n            this.ids = ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","export class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","export class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean } from \"../../../../Utils/Utils\";\nimport { ClickEvent } from \"./ClickEvent\";\nimport { DivEvent } from \"./DivEvent\";\nimport { HoverEvent } from \"./HoverEvent\";\nimport { ResizeEvent } from \"./ResizeEvent\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    get onclick() {\n        return this.onClick;\n    }\n    set onclick(value) {\n        this.onClick = value;\n    }\n    get ondiv() {\n        return this.onDiv;\n    }\n    set ondiv(value) {\n        this.onDiv = value;\n    }\n    get onhover() {\n        return this.onHover;\n    }\n    set onhover(value) {\n        this.onHover = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.onClick.load(data.onClick ?? data.onclick);\n        const onDiv = data.onDiv ?? data.ondiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, (t) => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load(data.onHover ?? data.onhover);\n        if (isBoolean(data.resize)) {\n            this.resize.enable = data.resize;\n        }\n        else {\n            this.resize.load(data.resize);\n        }\n    }\n}\n","export class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (!this._container) {\n            return;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (!interactors) {\n            return;\n        }\n        for (const interactor of interactors) {\n            if (!interactor.loadModeOptions) {\n                continue;\n            }\n            interactor.loadModeOptions(this, data);\n        }\n    }\n}\n","import { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = \"window\";\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    get detect_on() {\n        return this.detectsOn;\n    }\n    set detect_on(value) {\n        this.detectsOn = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const detectsOn = data.detectsOn ?? data.detect_on;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class ManualParticle {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.position) {\n            this.position = {\n                x: data.position.x ?? 50,\n                y: data.position.y ?? 50,\n                mode: data.position.mode ?? \"percent\",\n            };\n        }\n        if (data.options) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = \"canvas\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.maxWidth !== undefined) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (data.mode !== undefined) {\n            if (data.mode === \"screen\") {\n                this.mode = \"screen\";\n            }\n            else {\n                this.mode = \"canvas\";\n            }\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","export class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = \"any\";\n        this.value = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault\";\nimport { deepExtend } from \"../../../Utils/Utils\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ColorAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.offset = 0;\n        this.speed = 1;\n        this.delay = 0;\n        this.decay = 0;\n        this.sync = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nimport { HslAnimation } from \"./HslAnimation\";\nimport { OptionsColor } from \"./OptionsColor\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","export class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","export class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { CollisionsAbsorb } from \"./CollisionsAbsorb\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.maxSpeed = 50;\n        this.mode = \"bounce\";\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    get rotateX() {\n        return this.rotate.x;\n    }\n    set rotateX(value) {\n        this.rotate.x = value;\n    }\n    get rotateY() {\n        return this.rotate.y;\n    }\n    set rotateY(value) {\n        this.rotate.y = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const rotateX = data.rotate?.x ?? data.rotateX;\n        if (rotateX !== undefined) {\n            this.rotate.x = rotateX;\n        }\n        const rotateY = data.rotate?.y ?? data.rotateY;\n        if (rotateY !== undefined) {\n            this.rotate.y = rotateY;\n        }\n    }\n}\n","export class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = \"percent\";\n        this.radius = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom\";\nimport { deepExtend } from \"../../../../../Utils/Utils\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor\";\nexport class MoveTrailFill {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n","import { MoveTrailFill } from \"./MoveTrailFill\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    get fillColor() {\n        return this.fill.color;\n    }\n    set fillColor(value) {\n        this.fill.load({ color: value });\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined || data.fillColor !== undefined) {\n            this.fill.load(data.fill || { color: data.fillColor });\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","export class OutModes {\n    constructor() {\n        this.default = \"out\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = data.bottom ?? data.default;\n        this.left = data.left ?? data.default;\n        this.right = data.right ?? data.default;\n        this.top = data.top ?? data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.position) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n","import { isNumber, isObject } from \"../../../../Utils/Utils\";\nimport { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveCenter } from \"./MoveCenter\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = \"none\";\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(_) {\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes ?? data.outMode ?? data.out_mode;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path ?? data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n    constructor() {\n        super();\n        this.mode = \"auto\";\n        this.startValue = \"random\";\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 2;\n    }\n    get opacity_min() {\n        return this.minimumValue;\n    }\n    set opacity_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.opacity_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.opacity_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Opacity extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","export class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    get area() {\n        return this.width;\n    }\n    set area(value) {\n        this.width = value;\n    }\n    get factor() {\n        return this.height;\n    }\n    set factor(value) {\n        this.height = value;\n    }\n    get value_area() {\n        return this.area;\n    }\n    set value_area(value) {\n        this.area = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = data.width ?? data.area ?? data.value_area;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = data.height ?? data.factor;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = 0;\n        this.value = 0;\n    }\n    get max() {\n        return this.limit;\n    }\n    set max(value) {\n        this.limit = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.density.load(data.density);\n        const limit = data.limit ?? data.max;\n        if (limit !== undefined) {\n            this.limit = limit;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend, isArray } from \"../../../../Utils/Utils\";\nconst charKey = \"character\", charAltKey = \"char\", imageKey = \"image\", imageAltKey = \"images\", polygonKey = \"polygon\", polygonAltKey = \"star\";\nexport class Shape {\n    constructor() {\n        this.loadShape = (item, mainKey, altKey, altOverride) => {\n            if (!item) {\n                return;\n            }\n            const itemIsArray = isArray(item), emptyValue = itemIsArray ? [] : {}, mainDifferentValues = itemIsArray !== isArray(this.options[mainKey]), altDifferentValues = itemIsArray !== isArray(this.options[altKey]);\n            if (mainDifferentValues) {\n                this.options[mainKey] = emptyValue;\n            }\n            if (altDifferentValues && altOverride) {\n                this.options[altKey] = emptyValue;\n            }\n            this.options[mainKey] = deepExtend(this.options[mainKey] ?? emptyValue, item);\n            if (!this.options[altKey] || altOverride) {\n                this.options[altKey] = deepExtend(this.options[altKey] ?? emptyValue, item);\n            }\n        };\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = \"circle\";\n    }\n    get character() {\n        return (this.options[charKey] ?? this.options[charAltKey]);\n    }\n    set character(value) {\n        this.options[charAltKey] = this.options[charKey] = value;\n    }\n    get custom() {\n        return this.options;\n    }\n    set custom(value) {\n        this.options = value;\n    }\n    get image() {\n        return (this.options[imageKey] ?? this.options[imageAltKey]);\n    }\n    set image(value) {\n        this.options[imageAltKey] = this.options[imageKey] = value;\n    }\n    get images() {\n        return this.image;\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get polygon() {\n        return (this.options[polygonKey] ?? this.options[polygonAltKey]);\n    }\n    set polygon(value) {\n        this.options[polygonAltKey] = this.options[polygonKey] = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(_value) {\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const options = data.options ?? data.custom;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n                }\n            }\n        }\n        this.loadShape(data.character, charKey, charAltKey, true);\n        this.loadShape(data.polygon, polygonKey, polygonAltKey, false);\n        this.loadShape(data.image ?? data.images, imageKey, imageAltKey, true);\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class SizeAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 5;\n    }\n    get size_min() {\n        return this.minimumValue;\n    }\n    set size_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.size_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.size_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { SizeAnimation } from \"./SizeAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Size extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.random.minimumValue = 1;\n        this.value = 3;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils\";\nimport { AnimatableColor } from \"../AnimatableColor\";\nimport { Collisions } from \"./Collisions/Collisions\";\nimport { Move } from \"./Move/Move\";\nimport { Opacity } from \"./Opacity/Opacity\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber\";\nimport { Shadow } from \"./Shadow\";\nimport { Shape } from \"./Shape/Shape\";\nimport { Size } from \"./Size/Size\";\nimport { Stroke } from \"./Stroke\";\nimport { ZIndex } from \"./ZIndex/ZIndex\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        if (data.groups !== undefined) {\n            for (const group in data.groups) {\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n                }\n            }\n        }\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        const collisions = data.move?.collisions ?? data.move?.bounce;\n        if (collisions !== undefined) {\n            this.collisions.enable = collisions;\n        }\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = data.stroke ?? data.shape?.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, (t) => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.plugins.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { deepExtend, executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { Background } from \"./Background/Background\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask\";\nimport { FullScreen } from \"./FullScreen/FullScreen\";\nimport { Interactivity } from \"./Interactivity/Interactivity\";\nimport { ManualParticle } from \"./ManualParticle\";\nimport { Responsive } from \"./Responsive\";\nimport { Theme } from \"./Theme/Theme\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class Options {\n    constructor(engine, container) {\n        this._findDefaultTheme = (mode) => {\n            return (this.themes.find((theme) => theme.default.value && theme.default.mode === mode) ??\n                this.themes.find((theme) => theme.default.value && theme.default.mode === \"any\"));\n        };\n        this._importPreset = (preset) => {\n            this.load(this._engine.plugins.getPreset(preset));\n        };\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    get backgroundMode() {\n        return this.fullScreen;\n    }\n    set backgroundMode(value) {\n        this.fullScreen.load(value);\n    }\n    get fps_limit() {\n        return this.fpsLimit;\n    }\n    set fps_limit(value) {\n        this.fpsLimit = value;\n    }\n    get retina_detect() {\n        return this.detectRetina;\n    }\n    set retina_detect(value) {\n        this.detectRetina = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, (preset) => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = data.detectRetina ?? data.retina_detect;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = data.fpsLimit ?? data.fps_limit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = data.fullScreen ?? data.backgroundMode;\n        if (isBoolean(fullScreen)) {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles) {\n            this.manualParticles = data.manualParticles.map((t) => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.plugins.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find((t) => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = this._findDefaultTheme(\"dark\")?.name;\n        this.defaultThemes.light = this._findDefaultTheme(\"light\")?.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find((t) => t.mode === \"screen\" && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions?.options);\n        return responsiveOptions?.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find((theme) => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch && mediaMatch.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? \"dark\" : \"light\");\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = engine.plugins.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    async externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && (await interactor.interact(delta));\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode && interactor.handleClickMode(mode);\n        }\n    }\n    init() {\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    async particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && (await interactor.interact(particle, delta));\n        }\n    }\n    async reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && interactor.reset(particle);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && interactor.reset(particle);\n        }\n    }\n}\n","import { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nconst fixOutMode = (data) => {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * 2;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n};\nexport class Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = 0) => {\n            for (const [, plugin] of container.plugins) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-horizontal\"],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-vertical\"],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                return this._calcPosition(container, undefined, zIndex, tryCount + 1);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n                return res;\n            }\n            const rad = (Math.PI / 180) * getRangeValue(moveOptions.angle.value), radOffset = (Math.PI / 180) * getRangeValue(moveOptions.angle.offset), range = {\n                left: radOffset - rad / 2,\n                right: radOffset + rad / 2,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = 0) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries;\n            if (retries >= 0 && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find((particle) => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = (color) => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1, backSum = this.roll.horizontal ? Math.PI / 2 : 0, rolled = Math.floor(((this.roll.angle ?? 0) + backSum) / (Math.PI / backFactor)) % 2;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = (position) => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value);\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? 0,\n                mode: this.options.move.center.mode ?? \"percent\",\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case \"inside\":\n                    this.outType = \"inside\";\n                    break;\n                case \"outside\":\n                    this.outType = \"outside\";\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._loadShapeData = (shapeOptions, reduceDuplicates) => {\n            const shapeData = shapeOptions.options[this.shape];\n            if (!shapeData) {\n                return;\n            }\n            return deepExtend({\n                close: shapeOptions.close,\n                fill: shapeOptions.fill,\n            }, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\n        };\n        this._engine = engine;\n        this.init(id, position, overrideOptions, group);\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        for (const updater of container.particles.updaters) {\n            if (updater.particleDestroyed) {\n                updater.particleDestroyed(this, override);\n            }\n        }\n        if (pathGenerator) {\n            pathGenerator.reset(this);\n        }\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.fill = true;\n        this.pathRotation = false;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const shapeOptions = particlesOptions.shape;\n        if (overrideOptions && overrideOptions.shape && overrideOptions.shape.type) {\n            const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n            if (shape) {\n                this.shape = shape;\n                shapeOptions.load(overrideOptions.shape);\n            }\n        }\n        this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.fill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.close = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getValue(pathOptions.delay) * 1000;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = this._engine.plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer && drawer.loadShape) {\n            drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of container.particles.movers) {\n            mover.init && mover.init(this);\n        }\n        if (drawer && drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.particleCreated && plugin.particleCreated(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset && updater.reset(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < 4; i++) {\n                this._subs.push(new QuadTree(new Rectangle(x + (width / 2) * (i % 2), y + (height / 2) * (Math.round(i / 2) - (i % 2)), width / 2, height / 2), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some((sub) => sub.insert(point));\n    }\n    query(range, check, found) {\n        const res = found || [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                sub.query(range, check, res);\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { getLogger, getPosition } from \"../Utils/Utils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { errorPrefix } from \"./Utils/Constants\";\nconst qTreeCapacity = 4;\nconst qTreeRectangle = (canvasSize) => {\n    return new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._applyDensity = (options, manualCount, group) => {\n            if (!options.number.density?.enable) {\n                return;\n            }\n            const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter((t) => t.group === group).length);\n            this.limit = numberOptions.limit * densityFactor;\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = (densityOptions) => {\n            const container = this._container;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return 1;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this.pool.pop();\n                if (particle) {\n                    particle.init(this._nextId, position, overrideOptions, group);\n                }\n                else {\n                    particle = new Particle(this._engine, this._nextId, this._container, position, overrideOptions, group);\n                }\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(\"particleAdded\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n                return;\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            particle.destroy(override);\n            const zIdx = this._zArray.indexOf(particle);\n            this._array.splice(index, 1);\n            this._zArray.splice(zIdx, 1);\n            this.pool.push(particle);\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this.pool = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = this._engine.plugins.getMovers(container, true);\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(particle.position ? getPosition(particle.position, container.canvas.size) : undefined, particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const container = this._container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this._container;\n        container.canvas.clear();\n        await this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    init() {\n        const container = this._container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        let handled = false;\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n        this._interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this._interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (index < 0 || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            this._removeParticle(i--, group, override) && deleted++;\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups;\n        for (const group in groups) {\n            this._applyDensity(groups[group], 0, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.update && plugin.update(delta);\n        }\n        for (const particle of this._array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this._interactionManager.reset(particle);\n            for (const [, plugin] of this._container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                if (plugin.particleUpdate) {\n                    plugin.particleUpdate(particle, delta);\n                }\n            }\n            for (const mover of this.movers) {\n                mover.isEnabled(particle) && mover.move(particle, delta);\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            this.pool.push(...particlesToDelete);\n        }\n        await this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n        if (this.needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = zArray[zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = 1;\n        this.reduceFactor = 1;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        this.reduceFactor = 1;\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { getLogger, isFunction } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = 60, smooth = false) {\n    return {\n        value,\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) => p.velocity,\n    init: () => {\n    },\n    update: () => {\n    },\n    reset: () => {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._intersectionManager = (entries) => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                (entry.isIntersecting ? this.play : this.pause)();\n            }\n        };\n        this._nextFrame = async (timestamp) => {\n            try {\n                if (!this.smooth &&\n                    this.lastFrameTime !== undefined &&\n                    timestamp < this.lastFrameTime + 1000 / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this.lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this.lastFrameTime, this.fpsLimit, this.smooth);\n                this.addLifeTime(delta.value);\n                this.lastFrameTime = timestamp;\n                if (delta.value > 1000) {\n                    this.draw(false);\n                    return;\n                }\n                await this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.getAnimationStatus()) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator ?? defaultPathGenerator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            drawer.destroy && drawer.destroy(this);\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = requestAnimationFrame(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this._nextFrame(timestamp);\n        });\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode && plugin.handleClickMode(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n        this._lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.drawers) {\n            drawer.init && (await drawer.init(this));\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.init && (await plugin.init());\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup && plugin.particlesSetup();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause && plugin.pause();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = { ...defaultPathGenerator };\n        if (isFunction(pathOrGenerator)) {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            this._delayTimeout = setTimeout(async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    plugin.start && (await plugin.start());\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            }, this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop && plugin.stop();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n","export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners && listeners.forEach((handler) => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < 0) {\n            return;\n        }\n        if (length === 1) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, 1);\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../Utils/Utils\";\nfunction getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = [...initializers.values()].map((t) => t(container));\n        map.set(container, res);\n    }\n    return res;\n}\nexport class Plugins {\n    constructor(engine) {\n        this._engine = engine;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this._initializers.interactors.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this._initializers.movers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this._initializers.updaters.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        !this.getPathGenerator(type) && this.pathGenerators.set(type, pathGenerator);\n    }\n    addPlugin(plugin) {\n        !this.getPlugin(plugin.id) && this.plugins.push(plugin);\n    }\n    addPreset(presetKey, options, override = false) {\n        (override || !this.getPreset(presetKey)) && this.presets.set(presetKey, options);\n    }\n    addShapeDrawer(types, drawer) {\n        executeOnSingleOrMultiple(types, (type) => {\n            !this.getShapeDrawer(type) && this.drawers.set(type, drawer);\n        });\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            plugin.needsPlugin(container.actualOptions) && res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            updater.loadOptions && updater.loadOptions(options, ...sourceOptions);\n        }\n    }\n}\n","import { errorPrefix, generatedAttribute } from \"./Utils/Constants\";\nimport { getLogger, isBoolean, isFunction, isNumber, isString, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { Container } from \"./Container\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher\";\nimport { Plugins } from \"./Utils/Plugins\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nfunction isParamsEmpty(params) {\n    return !params.id && !params.element && !params.url && !params.options;\n}\nfunction isParams(obj) {\n    return !isParamsEmpty(obj);\n}\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = new Plugins(this);\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get version() {\n        return \"2.12.0\";\n    }\n    addConfig(nameOrConfig, config) {\n        if (isString(nameOrConfig)) {\n            if (config) {\n                config.name = nameOrConfig;\n                this._configs.set(nameOrConfig, config);\n            }\n        }\n        else {\n            this._configs.set(nameOrConfig.name ?? \"default\", nameOrConfig);\n        }\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this.plugins.addInteractor(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this.plugins.addParticleMover(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this.plugins.addParticleUpdater(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        this.plugins.addPathGenerator(name, generator);\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        this.plugins.addPlugin(plugin);\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        this.plugins.addPreset(preset, options, override);\n        await this.refresh(refresh);\n    }\n    async addShape(shape, drawer, initOrRefresh, afterEffectOrRefresh, destroyOrRefresh, refresh = true) {\n        let customDrawer;\n        let realRefresh = refresh, realInit, realAfterEffect, realDestroy;\n        if (isBoolean(initOrRefresh)) {\n            realRefresh = initOrRefresh;\n            realInit = undefined;\n        }\n        else {\n            realInit = initOrRefresh;\n        }\n        if (isBoolean(afterEffectOrRefresh)) {\n            realRefresh = afterEffectOrRefresh;\n            realAfterEffect = undefined;\n        }\n        else {\n            realAfterEffect = afterEffectOrRefresh;\n        }\n        if (isBoolean(destroyOrRefresh)) {\n            realRefresh = destroyOrRefresh;\n            realDestroy = undefined;\n        }\n        else {\n            realDestroy = destroyOrRefresh;\n        }\n        if (isFunction(drawer)) {\n            customDrawer = {\n                afterEffect: realAfterEffect,\n                destroy: realDestroy,\n                draw: drawer,\n                init: realInit,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        this.plugins.addShapeDrawer(shape, customDrawer);\n        await this.refresh(realRefresh);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this._domArray;\n    }\n    domItem(index) {\n        const dom = this.dom(), item = dom[index];\n        if (!item || item.destroyed) {\n            dom.splice(index, 1);\n            return;\n        }\n        return item;\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    async load(tagIdOrOptionsOrParams, options) {\n        return this.loadFromArray(tagIdOrOptionsOrParams, options);\n    }\n    async loadFromArray(tagIdOrOptionsOrParams, optionsOrIndex, index) {\n        let params;\n        if (!isParams(tagIdOrOptionsOrParams)) {\n            params = {};\n            if (isString(tagIdOrOptionsOrParams)) {\n                params.id = tagIdOrOptionsOrParams;\n            }\n            else {\n                params.options = tagIdOrOptionsOrParams;\n            }\n            if (isNumber(optionsOrIndex)) {\n                params.index = optionsOrIndex;\n            }\n            else {\n                params.options = optionsOrIndex ?? params.options;\n            }\n            params.index = index ?? params.index;\n        }\n        else {\n            params = tagIdOrOptionsOrParams;\n        }\n        return this._loadParams(params);\n    }\n    async loadJSON(tagId, pathConfigJson, index) {\n        let url, id;\n        if (isNumber(pathConfigJson) || pathConfigJson === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = pathConfigJson;\n        }\n        return this._loadParams({ id: id, url, index });\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        this.dom().forEach((t) => t.refresh());\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    async set(id, element, options, index) {\n        const params = { index };\n        if (isString(id)) {\n            params.id = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (element instanceof HTMLElement) {\n            params.element = element;\n        }\n        else {\n            params.options = element;\n        }\n        if (isNumber(options)) {\n            params.index = options;\n        }\n        else {\n            params.options = options ?? params.options;\n        }\n        return this._loadParams(params);\n    }\n    async setJSON(id, element, pathConfigJson, index) {\n        const params = {};\n        if (id instanceof HTMLElement) {\n            params.element = id;\n            params.url = element;\n            params.index = pathConfigJson;\n        }\n        else {\n            params.id = id;\n            params.element = element;\n            params.url = pathConfigJson;\n            params.index = index;\n        }\n        return this._loadParams(params);\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (!dom.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n    async _loadParams(params) {\n        const id = params.id ?? `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        let domContainer = params.element ?? document.getElementById(id);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = id;\n            document.body.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this.dom(), oldIndex = dom.findIndex((v) => v.id === id);\n        if (oldIndex >= 0) {\n            const old = this.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? hslaToRgba({\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n}\n","import { init } from \"./init\";\nimport { isSsr } from \"./Utils/Utils\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports\";\nexport * from \"./export-types\";\nexport { tsParticles };\n","import { Engine } from \"./Core/Engine\";\nimport { HslColorManager } from \"./Utils/HslColorManager\";\nimport { RgbColorManager } from \"./Utils/RgbColorManager\";\nimport { addColorManager } from \"./Utils/ColorUtils\";\nexport function init() {\n    const rgbColorManager = new RgbColorManager(), hslColorManager = new HslColorManager();\n    addColorManager(rgbColorManager);\n    addColorManager(hslColorManager);\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n","import { tsParticles } from \"tsparticles-engine\";\nexport class Particles {\n    static init(options) {\n        const particles = new Particles(), selector = options.selector;\n        if (!selector) {\n            throw new Error(\"No selector provided\");\n        }\n        const el = document.querySelector(selector);\n        if (!el) {\n            throw new Error(\"No element found for selector\");\n        }\n        tsParticles\n            .set(selector.replace(\".\", \"\").replace(\"!\", \"\"), el, {\n            fullScreen: {\n                enable: false,\n            },\n            particles: {\n                color: {\n                    value: options.color ?? \"!000000\",\n                },\n                links: {\n                    color: \"random\",\n                    distance: options.minDistance ?? 120,\n                    enable: options.connectParticles ?? false,\n                },\n                move: {\n                    enable: true,\n                    speed: options.speed ?? 0.5,\n                },\n                number: {\n                    value: options.maxParticles ?? 100,\n                },\n                size: {\n                    value: { min: 1, max: options.sizeVariations ?? 3 },\n                },\n            },\n            responsive: options.responsive?.map((responsive) => ({\n                maxWidth: responsive.breakpoint,\n                options: {\n                    particles: {\n                        color: {\n                            value: responsive.options?.color,\n                        },\n                        links: {\n                            distance: responsive.options?.minDistance,\n                            enable: responsive.options?.connectParticles,\n                        },\n                        number: {\n                            value: options.maxParticles,\n                        },\n                        move: {\n                            enable: true,\n                            speed: responsive.options?.speed,\n                        },\n                        size: {\n                            value: responsive.options?.sizeVariations,\n                        },\n                    },\n                },\n            })),\n        })\n            .then((container) => {\n            particles._container = container;\n        });\n        return particles;\n    }\n    destroy() {\n        const container = this._container;\n        container && container.destroy();\n    }\n    pauseAnimation() {\n        const container = this._container;\n        container && container.pause();\n    }\n    resumeAnimation() {\n        const container = this._container;\n        container && container.play();\n    }\n}\n","const initParticlesJS = (engine) => {\n    const particlesJS = (tagId, options) => {\n        return engine.load(tagId, options);\n    };\n    particlesJS.load = (tagId, pathConfigJson, callback) => {\n        engine\n            .loadJSON(tagId, pathConfigJson)\n            .then((container) => {\n            if (container) {\n                callback(container);\n            }\n        })\n            .catch(() => {\n            callback(undefined);\n        });\n    };\n    particlesJS.setOnClickHandler = (callback) => {\n        engine.setOnClickHandler(callback);\n    };\n    const pJSDom = engine.dom();\n    return { particlesJS, pJSDom };\n};\nexport { initParticlesJS };\n","import { Particles } from \"./marcbruederlin/Particles\";\nimport { initParticlesJS } from \"./VincentGarreau/particles\";\nconst initPjs = (engine) => {\n    const { particlesJS, pJSDom } = initParticlesJS(engine);\n    window.particlesJS = particlesJS;\n    window.pJSDom = pJSDom;\n    window.Particles = Particles;\n    return { particlesJS, pJSDom, Particles };\n};\nexport { initPjs };\n","import { clamp, getDistances, getRandom, } from \"tsparticles-engine\";\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), { maxDistance } = particle.retina, hDistance = maxDistance.horizontal, vDistance = maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    if (((hDistance && dxFixed >= hDistance) || (vDistance && dyFixed >= vDistance)) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance && ((pos.x < initialPosition.x && vel.x < 0) || (pos.x > initialPosition.x && vel.x > 0))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance && ((pos.y < initialPosition.y && vel.y < 0) || (pos.y > initialPosition.y && vel.y > 0))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta) {\n    applyPath(particle, delta);\n    const gravityOptions = particle.gravity, gravityFactor = gravityOptions?.enable && gravityOptions.inverse ? -1 : 1;\n    if (moveDrift && moveSpeed) {\n        particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n    }\n    if (gravityOptions?.enable && moveSpeed) {\n        particle.velocity.y += (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (60 * moveSpeed);\n    }\n    const decay = particle.moveDecay;\n    particle.velocity.multTo(decay);\n    const velocity = particle.velocity.mult(moveSpeed);\n    if (gravityOptions?.enable &&\n        maxSpeed > 0 &&\n        ((!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed) ||\n            (gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed))) {\n        velocity.y = gravityFactor * maxSpeed;\n        if (moveSpeed) {\n            particle.velocity.y = velocity.y / moveSpeed;\n        }\n    }\n    const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n    velocity.multTo(zVelocityFactor);\n    const { position } = particle;\n    position.addTo(velocity);\n    if (moveOptions.vibrate) {\n        position.x += Math.sin(position.x * Math.cos(position.y));\n        position.y += Math.cos(position.y * Math.sin(position.x));\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const updateFunc = {\n        x: particle.spin.direction === \"clockwise\" ? Math.cos : Math.sin,\n        y: particle.spin.direction === \"clockwise\" ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height);\n    if (particle.spin.radius > maxCanvasSize / 2) {\n        particle.spin.radius = maxCanvasSize / 2;\n        particle.spin.acceleration *= -1;\n    }\n    else if (particle.spin.radius < 0) {\n        particle.spin.radius = 0;\n        particle.spin.acceleration *= -1;\n    }\n    particle.spin.angle += (moveSpeed / 100) * (1 - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = particle.pathGenerator?.generate(particle, delta);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -1, 1);\n        particle.velocity.y = clamp(particle.velocity.y, -1, 1);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : 1;\n}\n","import { getDistance, getRangeMax, getRangeValue, } from \"tsparticles-engine\";\nimport { applyDistance, getProximitySpeedFactor, move, spin } from \"./Utils\";\nconst diffFactor = 2;\nexport class BaseMover {\n    constructor() {\n        this._initSpin = (particle) => {\n            const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n            if (!spinOptions.enable) {\n                return;\n            }\n            const spinPos = spinOptions.position ?? { x: 50, y: 50 }, spinCenter = {\n                x: (spinPos.x / 100) * container.canvas.size.width,\n                y: (spinPos.y / 100) * container.canvas.size.height,\n            }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n            particle.spin = {\n                center: spinCenter,\n                direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n                angle: particle.velocity.angle,\n                radius: distance,\n                acceleration: particle.retina.spinAcceleration,\n            };\n        };\n    }\n    init(particle) {\n        const options = particle.options, gravityOptions = options.move.gravity;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        this._initSpin(particle);\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, pxRatio = container.retina.pixelRatio, slowFactor = getProximitySpeedFactor(particle), baseSpeed = (particle.retina.moveSpeed ??= getRangeValue(moveOptions.speed) * pxRatio) *\n            container.retina.reduceFactor, moveDrift = (particle.retina.moveDrift ??= getRangeValue(particle.options.move.drift) * pxRatio), maxSize = getRangeMax(particleOptions.size.value) * pxRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, moveSpeed = (baseSpeed * sizeFactor * slowFactor * (delta.factor || 1)) / diffFactor, maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n        }\n        applyDistance(particle);\n    }\n}\n","import { BaseMover } from \"./BaseMover\";\nexport async function loadBaseMover(engine, refresh = true) {\n    await engine.addMover(\"base\", () => new BaseMover(), refresh);\n}\n","import { isObject } from \"tsparticles-engine\";\nexport class CircleDrawer {\n    draw(context, particle, radius) {\n        if (!particle.circleRange) {\n            particle.circleRange = { min: 0, max: Math.PI * 2 };\n        }\n        const circleRange = particle.circleRange;\n        context.arc(0, 0, radius, circleRange.min, circleRange.max, false);\n    }\n    getSidesCount() {\n        return 12;\n    }\n    particleInit(container, particle) {\n        const shapeData = particle.shapeData, angle = shapeData?.angle ?? {\n            max: 360,\n            min: 0,\n        };\n        particle.circleRange = !isObject(angle)\n            ? {\n                min: 0,\n                max: (angle * Math.PI) / 180,\n            }\n            : { min: (angle.min * Math.PI) / 180, max: (angle.max * Math.PI) / 180 };\n    }\n}\n","import { CircleDrawer } from \"./CircleDrawer\";\nexport async function loadCircleShape(engine, refresh = true) {\n    await engine.addShape(\"circle\", new CircleDrawer(), refresh);\n}\n","import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateColor(particle, delta) {\n    const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n    if (!color) {\n        return;\n    }\n    const { h, s, l } = color;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n","import { getHslAnimationFromHsl, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { updateColor } from \"./Utils\";\nexport class ColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((color?.h.value !== undefined && hAnimation.enable) ||\n                (color?.s.value !== undefined && sAnimation.enable) ||\n                (color?.l.value !== undefined && lAnimation.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle, delta);\n    }\n}\n","import { ColorUpdater } from \"./ColorUpdater\";\nexport async function loadColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"color\", (container) => new ColorUpdater(container), refresh);\n}\n","import { getRandom, getRangeValue, initParticleNumericAnimationValue, } from \"tsparticles-engine\";\nimport { updateOpacity } from \"./Utils\";\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity;\n        particle.opacity = initParticleNumericAnimationValue(opacityOptions, 1);\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / 100) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            ((particle.opacity.maxLoops ?? 0) <= 0 ||\n                ((particle.opacity.maxLoops ?? 0) > 0 &&\n                    (particle.opacity.loops ?? 0) < (particle.opacity.maxLoops ?? 0))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.time = 0;\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateOpacity(particle, delta);\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.opacity.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateOpacity(particle, delta) {\n    const data = particle.opacity;\n    if (particle.destroyed || !data?.enable || ((data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0))) {\n        return;\n    }\n    const minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value >= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value <= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n    }\n    if (data.velocity && data.decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","import { OpacityUpdater } from \"./OpacityUpdater\";\nexport async function loadOpacityUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"opacity\", (container) => new OpacityUpdater(container), refresh);\n}\n","import { calculateBounds, } from \"tsparticles-engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            \"bounce\",\n            \"bounce-vertical\",\n            \"bounce-horizontal\",\n            \"bounceVertical\",\n            \"bounceHorizontal\",\n            \"split\",\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n","import { getValue } from \"tsparticles-engine\";\nexport function bounceHorizontal(data) {\n    if ((data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-horizontal\" &&\n        data.outMode !== \"bounceHorizontal\" &&\n        data.outMode !== \"split\") ||\n        (data.direction !== \"left\" && data.direction !== \"right\")) {\n        return;\n    }\n    if (data.bounds.right < 0 && data.direction === \"left\") {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width && data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === \"right\" && data.bounds.right >= data.canvasSize.width && velocity > 0) ||\n        (data.direction === \"left\" && data.bounds.left <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.horizontal);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width && data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= 0 && data.direction === \"left\") {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if ((data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-vertical\" &&\n        data.outMode !== \"bounceVertical\" &&\n        data.outMode !== \"split\") ||\n        (data.direction !== \"bottom\" && data.direction !== \"top\")) {\n        return;\n    }\n    if (data.bounds.bottom < 0 && data.direction === \"top\") {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height && data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === \"bottom\" && data.bounds.bottom >= data.canvasSize.height && velocity > 0) ||\n        (data.direction === \"top\" && data.bounds.top <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.vertical);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height && data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= 0 && data.direction === \"top\") {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\n","import { Vector, getDistances, isPointInside, } from \"tsparticles-engine\";\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"destroy\"];\n    }\n    update(particle, direction, _delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"normal\":\n            case \"outside\":\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case \"inside\": {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                const { x: vx, y: vy } = particle.velocity;\n                if ((vx < 0 && dx > particle.moveCenter.radius) ||\n                    (vy < 0 && dy > particle.moveCenter.radius) ||\n                    (vx >= 0 && dx < -particle.moveCenter.radius) ||\n                    (vy >= 0 && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, undefined, true);\n    }\n}\n","import { Vector, isPointInside, } from \"tsparticles-engine\";\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"none\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === \"left\" || direction === \"right\")) ||\n            (particle.options.move.distance.vertical &&\n                (direction === \"top\" || direction === \"bottom\"))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container;\n        const canvasSize = container.canvas.size;\n        const pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > 0 && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < 0 && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > 0 && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < 0 && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === \"bottom\") ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === \"top\")) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n","import { Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"tsparticles-engine\";\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"out\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"inside\": {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= 0 && dx >= 0) || (vy <= 0 && dy >= 0) || (vx >= 0 && dx <= 0) || (vy >= 0 && dy <= 0)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case \"outside\": {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case \"normal\": {\n                        const wrap = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === \"right\" &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === \"left\" && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === \"bottom\" &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === \"top\" && nextBounds.bottom < -particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n","import { BounceOutMode } from \"./BounceOutMode\";\nimport { DestroyOutMode } from \"./DestroyOutMode\";\nimport { NoneOutMode } from \"./NoneOutMode\";\nimport { OutOutMode } from \"./OutOutMode\";\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this.container = container;\n        this._updateOutMode = (particle, delta, outMode, direction) => {\n            for (const updater of this.updaters) {\n                updater.update(particle, direction, delta, outMode);\n            }\n        };\n        this.updaters = [\n            new BounceOutMode(container),\n            new DestroyOutMode(container),\n            new OutOutMode(container),\n            new NoneOutMode(container),\n        ];\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        const outModes = particle.options.move.outModes;\n        this._updateOutMode(particle, delta, outModes.bottom ?? outModes.default, \"bottom\");\n        this._updateOutMode(particle, delta, outModes.left ?? outModes.default, \"left\");\n        this._updateOutMode(particle, delta, outModes.right ?? outModes.default, \"right\");\n        this._updateOutMode(particle, delta, outModes.top ?? outModes.default, \"top\");\n    }\n}\n","import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater\";\nexport async function loadOutModesUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"outModes\", (container) => new OutOfCanvasUpdater(container), refresh);\n}\n","import { getRandom } from \"tsparticles-engine\";\nimport { updateSize } from \"./Utils\";\nexport class SizeUpdater {\n    init(particle) {\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                ((particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            ((particle.size.maxLoops ?? 0) <= 0 ||\n                ((particle.size.maxLoops ?? 0) > 0 && (particle.size.loops ?? 0) < (particle.size.maxLoops ?? 0))));\n    }\n    reset(particle) {\n        particle.size.loops = 0;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateSize(particle, delta);\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.size.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateSize(particle, delta) {\n    const data = particle.size;\n    if (particle.destroyed ||\n        !data ||\n        !data.enable ||\n        ((data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0))) {\n        return;\n    }\n    const sizeVelocity = (data.velocity ?? 0) * delta.factor, minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value >= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += sizeVelocity;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value <= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= sizeVelocity;\n            }\n    }\n    if (data.velocity && decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","import { SizeUpdater } from \"./SizeUpdater\";\nexport async function loadSizeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"size\", () => new SizeUpdater(), refresh);\n}\n","import { loadBaseMover } from \"tsparticles-move-base\";\nimport { loadCircleShape } from \"tsparticles-shape-circle\";\nimport { loadColorUpdater } from \"tsparticles-updater-color\";\nimport { loadOpacityUpdater } from \"tsparticles-updater-opacity\";\nimport { loadOutModesUpdater } from \"tsparticles-updater-out-modes\";\nimport { loadSizeUpdater } from \"tsparticles-updater-size\";\nexport async function loadBasic(engine, refresh = true) {\n    await loadBaseMover(engine, false);\n    await loadCircleShape(engine, false);\n    await loadColorUpdater(engine, false);\n    await loadOpacityUpdater(engine, false);\n    await loadOutModesUpdater(engine, false);\n    await loadSizeUpdater(engine, false);\n    await engine.refresh(refresh);\n}\n","import { addEasing } from \"tsparticles-engine\";\nexport async function loadEasingQuadPlugin() {\n    addEasing(\"ease-in-quad\", (value) => value ** 2);\n    addEasing(\"ease-out-quad\", (value) => 1 - (1 - value) ** 2);\n    addEasing(\"ease-in-out-quad\", (value) => (value < 0.5 ? 2 * value ** 2 : 1 - (-2 * value + 2) ** 2 / 2));\n}\n","export class ExternalInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"external\";\n    }\n}\n","export class Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.easing = \"ease-out-quad\";\n        this.factor = 1;\n        this.maxSpeed = 50;\n        this.speed = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Vector, clamp, getDistances, getEasing, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Attract } from \"./Options/Classes/Attract\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickAttract = () => {\n            const container = this.container;\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            const { attract } = container;\n            if (!attract.finish) {\n                if (!attract.count) {\n                    attract.count = 0;\n                }\n                attract.count++;\n                if (attract.count === container.particles.count) {\n                    attract.finish = true;\n                }\n            }\n            if (attract.clicking) {\n                const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n                if (!attractRadius || attractRadius < 0 || !mousePos) {\n                    return;\n                }\n                this._processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n            }\n            else if (attract.clicking === false) {\n                attract.particles = [];\n            }\n            return;\n        };\n        this._hoverAttract = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n            if (!attractRadius || attractRadius < 0 || !mousePos) {\n                return;\n            }\n            this._processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n        };\n        this._processAttract = (position, attractRadius, area) => {\n            const container = this.container, attractOptions = container.actualOptions.interactivity.modes.attract;\n            if (!attractOptions) {\n                return;\n            }\n            const query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position);\n                const velocity = attractOptions.speed * attractOptions.factor;\n                const attractFactor = clamp(getEasing(attractOptions.easing)(1 - distance / attractRadius) * velocity, 0, attractOptions.maxSpeed);\n                const normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n                particle.position.subFrom(normVec);\n            }\n        };\n        this._engine = engine;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;\n            if (!attract || mode !== \"attract\") {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                if (!container.attract) {\n                    container.attract = { particles: [] };\n                }\n                container.attract.clicking = false;\n            }, attract.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;\n        if (!attract) {\n            return;\n        }\n        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n            this._hoverAttract();\n        }\n        else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n            this._clickAttract();\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.attract) {\n            options.attract = new Attract();\n        }\n        for (const source of sources) {\n            options.attract.load(source?.attract);\n        }\n    }\n    reset() {\n    }\n}\n","import { Attractor } from \"./Attractor\";\nexport async function loadExternalAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalAttract\", (container) => new Attractor(engine, container), refresh);\n}\nexport * from \"./Options/Classes/Attract\";\nexport * from \"./Options/Interfaces/IAttract\";\n","export class Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, isDivModeEnabled, isInArray, mouseMoveEvent, rectBounce, } from \"tsparticles-engine\";\nimport { Bounce } from \"./Options/Classes/Bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._processBounce = (position, radius, area) => {\n            const query = this.container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                if (area instanceof Circle) {\n                    circleBounce(circleBounceDataFromParticle(particle), {\n                        position,\n                        radius,\n                        mass: (radius ** 2 * Math.PI) / 2,\n                        velocity: Vector.origin,\n                        factor: Vector.origin,\n                    });\n                }\n                else if (area instanceof Rectangle) {\n                    rectBounce(particle, calculateBounds(position, radius));\n                }\n            }\n        };\n        this._processMouseBounce = () => {\n            const container = this.container, pxRatio = container.retina.pixelRatio, tolerance = 10 * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n            if (!radius || radius < 0 || !mousePos) {\n                return;\n            }\n            this._processBounce(mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance));\n        };\n        this._singleSelectorBounce = (selector, div) => {\n            const container = this.container, query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, radius = (elem.offsetWidth / 2) * pxRatio, tolerance = 10 * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, radius + tolerance)\n                    : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * 2, elem.offsetHeight * pxRatio + tolerance * 2);\n                this._processBounce(pos, radius, area);\n            });\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"bounce\", hoverMode)) {\n            this._processMouseBounce();\n        }\n        else {\n            divModeExecute(\"bounce\", divs, (selector, div) => this._singleSelectorBounce(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv;\n        return ((mouse.position && events.onHover.enable && isInArray(\"bounce\", events.onHover.mode)) ||\n            isDivModeEnabled(\"bounce\", divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source?.bounce);\n        }\n    }\n    reset() {\n    }\n}\n","import { Bouncer } from \"./Bouncer\";\nexport async function loadExternalBounceInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBounce\", (container) => new Bouncer(container), refresh);\n}\nexport * from \"./Options/Classes/Bounce\";\nexport * from \"./Options/Interfaces/IBounce\";\n","import { OptionsColor, executeOnSingleOrMultiple, isArray, } from \"tsparticles-engine\";\nexport class BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.mix = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.mix !== undefined) {\n            this.mix = data.mix;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            const sourceColor = isArray(this.color) ? undefined : this.color;\n            this.color = executeOnSingleOrMultiple(data.color, (color) => {\n                return OptionsColor.create(sourceColor, color);\n            });\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { BubbleBase } from \"./BubbleBase\";\nexport class BubbleDiv extends BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { BubbleBase } from \"./BubbleBase\";\nimport { BubbleDiv } from \"./BubbleDiv\";\nexport class Bubble extends BubbleBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new BubbleDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nexport function calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromSingleOrMultiple, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl, } from \"tsparticles-engine\";\nimport { Bubble } from \"./Options/Classes/Bubble\";\nimport { calculateBubbleValue } from \"./Utils\";\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._clickBubble = () => {\n            const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || !mouseClickPos) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            const distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < 0) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, (p) => this.isEnabled(p)), { bubble } = container;\n            for (const particle of query) {\n                if (!bubble.clicking) {\n                    continue;\n                }\n                particle.bubble.inRange = !bubble.durationEnd;\n                const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n                if (timeSpent > bubbleOptions.duration) {\n                    bubble.durationEnd = true;\n                }\n                if (timeSpent > bubbleOptions.duration * 2) {\n                    bubble.clicking = false;\n                    bubble.durationEnd = false;\n                }\n                const sizeData = {\n                    bubbleObj: {\n                        optValue: container.retina.bubbleModeSize,\n                        value: particle.bubble.radius,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                        value: particle.size.value,\n                    },\n                    type: \"size\",\n                };\n                this._process(particle, distMouse, timeSpent, sizeData);\n                const opacityData = {\n                    bubbleObj: {\n                        optValue: bubbleOptions.opacity,\n                        value: particle.bubble.opacity,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.opacity.value),\n                        value: particle.opacity?.value ?? 1,\n                    },\n                    type: \"opacity\",\n                };\n                this._process(particle, distMouse, timeSpent, opacityData);\n                if (!bubble.durationEnd && distMouse <= distance) {\n                    this._hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n        };\n        this._hoverBubble = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < 0 || mousePos === undefined) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                particle.bubble.inRange = true;\n                const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = 1 - pointDistance / distance;\n                if (pointDistance <= distance) {\n                    if (ratio >= 0 && container.interactivity.status === mouseMoveEvent) {\n                        this._hoverBubbleSize(particle, ratio);\n                        this._hoverBubbleOpacity(particle, ratio);\n                        this._hoverBubbleColor(particle, ratio);\n                    }\n                }\n                else {\n                    this.reset(particle);\n                }\n                if (container.interactivity.status === mouseLeaveEvent) {\n                    this.reset(particle);\n                }\n            }\n        };\n        this._hoverBubbleColor = (particle, ratio, divBubble) => {\n            const options = this.container.actualOptions, bubbleOptions = divBubble ?? options.interactivity.modes.bubble;\n            if (!bubbleOptions) {\n                return;\n            }\n            if (!particle.bubble.finalColor) {\n                const modeColor = bubbleOptions.color;\n                if (!modeColor) {\n                    return;\n                }\n                const bubbleColor = itemFromSingleOrMultiple(modeColor);\n                particle.bubble.finalColor = rangeColorToHsl(bubbleColor);\n            }\n            if (!particle.bubble.finalColor) {\n                return;\n            }\n            if (bubbleOptions.mix) {\n                particle.bubble.color = undefined;\n                const pColor = particle.getFillColor();\n                particle.bubble.color = pColor\n                    ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, 1 - ratio, ratio))\n                    : particle.bubble.finalColor;\n            }\n            else {\n                particle.bubble.color = particle.bubble.finalColor;\n            }\n        };\n        this._hoverBubbleOpacity = (particle, ratio, divBubble) => {\n            const container = this.container, options = container.actualOptions, modeOpacity = divBubble?.opacity ?? options.interactivity.modes.bubble?.opacity;\n            if (!modeOpacity) {\n                return;\n            }\n            const optOpacity = particle.options.opacity.value, pOpacity = particle.opacity?.value ?? 1, opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n            if (opacity !== undefined) {\n                particle.bubble.opacity = opacity;\n            }\n        };\n        this._hoverBubbleSize = (particle, ratio, divBubble) => {\n            const container = this.container, modeSize = divBubble?.size ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n            if (modeSize === undefined) {\n                return;\n            }\n            const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio, pSize = particle.size.value, size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n            if (size !== undefined) {\n                particle.bubble.radius = size;\n            }\n        };\n        this._process = (particle, distMouse, timeSpent, data) => {\n            const container = this.container, bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || bubbleParam === undefined) {\n                return;\n            }\n            const bubbleDuration = bubbleOptions.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value || 0, type = data.type;\n            if (!bubbleDistance || bubbleDistance < 0 || bubbleParam === particlesParam) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            if (container.bubble.durationEnd) {\n                if (pObjBubble) {\n                    if (type === \"size\") {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === \"opacity\") {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n            else {\n                if (distMouse <= bubbleDistance) {\n                    const obj = pObjBubble ?? pObj;\n                    if (obj !== bubbleParam) {\n                        const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                        if (type === \"size\") {\n                            particle.bubble.radius = value;\n                        }\n                        if (type === \"opacity\") {\n                            particle.bubble.opacity = value;\n                        }\n                    }\n                }\n                else {\n                    if (type === \"size\") {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === \"opacity\") {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n        };\n        this._singleSelectorHover = (delta, selector, div) => {\n            const container = this.container, selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;\n            if (!bubble || !selectors.length) {\n                return;\n            }\n            selectors.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n                for (const particle of query) {\n                    if (!area.contains(particle.getPosition())) {\n                        continue;\n                    }\n                    particle.bubble.inRange = true;\n                    const divs = bubble.divs, divBubble = divMode(divs, elem);\n                    if (!particle.bubble.div || particle.bubble.div !== elem) {\n                        this.clear(particle, delta, true);\n                        particle.bubble.div = elem;\n                    }\n                    this._hoverBubbleSize(particle, 1, divBubble);\n                    this._hoverBubbleOpacity(particle, 1, divBubble);\n                    this._hoverBubbleColor(particle, 1, divBubble);\n                }\n            });\n        };\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== \"bubble\") {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    clear(particle, delta, force) {\n        if (particle.bubble.inRange && !force) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    init() {\n        const container = this.container, bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble) {\n            return;\n        }\n        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n        if (bubble.size !== undefined) {\n            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n        }\n    }\n    async interact(delta) {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(\"bubble\", hoverMode)) {\n            this._hoverBubble();\n        }\n        else if (clickEnabled && isInArray(\"bubble\", clickMode)) {\n            this._clickBubble();\n        }\n        else {\n            divModeExecute(\"bubble\", divs, (selector, div) => this._singleSelectorHover(delta, selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, { onClick, onDiv, onHover } = events, divBubble = isDivModeEnabled(\"bubble\", onDiv);\n        if (!(divBubble || (onHover.enable && mouse.position) || (onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        return isInArray(\"bubble\", onHover.mode) || isInArray(\"bubble\", onClick.mode) || divBubble;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bubble) {\n            options.bubble = new Bubble();\n        }\n        for (const source of sources) {\n            options.bubble.load(source?.bubble);\n        }\n    }\n    reset(particle) {\n        particle.bubble.inRange = false;\n    }\n}\n","import { Bubbler } from \"./Bubbler\";\nexport async function loadExternalBubbleInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBubble\", (container) => new Bubbler(container), refresh);\n}\nexport * from \"./Options/Classes/BubbleBase\";\nexport * from \"./Options/Classes/BubbleDiv\";\nexport * from \"./Options/Classes/Bubble\";\nexport * from \"./Options/Interfaces/IBubbleBase\";\nexport * from \"./Options/Interfaces/IBubbleDiv\";\nexport * from \"./Options/Interfaces/IBubble\";\n","export class ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { ConnectLinks } from \"./ConnectLinks\";\nexport class Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks();\n        this.radius = 60;\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links ?? data.lineLinked ?? data.line_linked);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { colorMix, drawLine, getStyleFromHsl, getStyleFromRgb, } from \"tsparticles-engine\";\nexport function gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(0, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(gradStop > 1 ? 1 : gradStop, getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(1, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nexport function drawConnectLine(context, width, lineStyle, begin, end) {\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n}\nexport function lineStyle(container, ctx, p1, p2) {\n    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;\n    if (!connectOptions) {\n        return;\n    }\n    return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nexport function drawConnection(container, p1, p2) {\n    container.canvas.draw((ctx) => {\n        const ls = lineStyle(container, ctx, p1, p2);\n        if (!ls) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        drawConnectLine(ctx, p1.retina.linksWidth ?? 0, ls, pos1, pos2);\n    });\n}\n","import { ExternalInteractorBase, isInArray, } from \"tsparticles-engine\";\nimport { Connect } from \"./Options/Classes/Connect\";\nimport { drawConnection } from \"./Utils\";\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;\n        if (!connect) {\n            return;\n        }\n        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n            const mousePos = container.interactivity.mouse.position;\n            if (!container.retina.connectModeDistance ||\n                container.retina.connectModeDistance < 0 ||\n                !container.retina.connectModeRadius ||\n                container.retina.connectModeRadius < 0 ||\n                !mousePos) {\n                return;\n            }\n            const distance = Math.abs(container.retina.connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            let i = 0;\n            for (const p1 of query) {\n                const pos1 = p1.getPosition();\n                for (const p2 of query.slice(i + 1)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(container.retina.connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        drawConnection(container, p1, p2);\n                    }\n                }\n                ++i;\n            }\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(\"connect\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.connect) {\n            options.connect = new Connect();\n        }\n        for (const source of sources) {\n            options.connect.load(source?.connect);\n        }\n    }\n    reset() {\n    }\n}\n","import { Connector } from \"./Connector\";\nexport async function loadExternalConnectInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalConnect\", (container) => new Connector(container), refresh);\n}\nexport * from \"./Options/Classes/Connect\";\nexport * from \"./Options/Classes/ConnectLinks\";\nexport * from \"./Options/Interfaces/IConnect\";\nexport * from \"./Options/Interfaces/IConnectLinks\";\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { GrabLinks } from \"./GrabLinks\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks();\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links ?? data.lineLinked ?? data.line_linked);\n    }\n}\n","import { drawLine, getStyleFromRgb } from \"tsparticles-engine\";\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n}\nexport function drawGrab(container, particle, lineColor, opacity, mousePos) {\n    container.canvas.draw((ctx) => {\n        const beginPos = particle.getPosition();\n        drawGrabLine(ctx, particle.retina.linksWidth ?? 0, beginPos, mousePos, lineColor, opacity);\n    });\n}\n","import { ExternalInteractorBase, getDistance, getLinkColor, getLinkRandomColor, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Grab } from \"./Options/Classes/Grab\";\nimport { drawGrab } from \"./Utils\";\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;\n        if (!grab) {\n            return;\n        }\n        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.modes.grab ||\n            !interactivity.events.onHover.enable ||\n            container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance;\n        if (!distance || distance < 0) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= 0) {\n                continue;\n            }\n            const optColor = grabLineOptions.color ?? particle.options.links?.color;\n            if (!container.particles.grabLineColor && optColor) {\n                const linksOptions = interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                continue;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"grab\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.grab) {\n            options.grab = new Grab();\n        }\n        for (const source of sources) {\n            options.grab.load(source?.grab);\n        }\n    }\n    reset() {\n    }\n}\n","import { Grabber } from \"./Grabber\";\nexport async function loadExternalGrabInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalGrab\", (container) => new Grabber(container), refresh);\n}\nexport * from \"./Options/Classes/Grab\";\nexport * from \"./Options/Classes/GrabLinks\";\nexport * from \"./Options/Interfaces/IGrab\";\nexport * from \"./Options/Interfaces/IGrabLinks\";\n","import { ExternalInteractorBase } from \"tsparticles-engine\";\nexport class Pauser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"pause\") {\n                return;\n            }\n            const container = this.container;\n            if (container.getAnimationStatus()) {\n                container.pause();\n            }\n            else {\n                container.play();\n            }\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n}\n","import { Pauser } from \"./Pauser\";\nexport async function loadExternalPauseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPause\", (container) => new Pauser(container), refresh);\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class Push {\n    constructor() {\n        this.default = true;\n        this.groups = [];\n        this.quantity = 4;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = setRangeValue(value);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        if (data.groups !== undefined) {\n            this.groups = data.groups.map((t) => t);\n        }\n        if (!this.groups.length) {\n            this.default = true;\n        }\n        const quantity = data.quantity ?? data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, itemFromArray, } from \"tsparticles-engine\";\nimport { Push } from \"./Options/Classes/Push\";\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"push\") {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const quantity = getRangeValue(pushOptions.quantity);\n            if (quantity <= 0) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            container.particles.push(quantity, container.interactivity.mouse, groupOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source?.push);\n        }\n    }\n    reset() {\n    }\n}\n","import { Pusher } from \"./Pusher\";\nexport async function loadExternalPushInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPush\", (container) => new Pusher(container), refresh);\n}\nexport * from \"./Options/Classes/Push\";\nexport * from \"./Options/Interfaces/IPush\";\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = setRangeValue(value);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const quantity = data.quantity ?? data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, } from \"tsparticles-engine\";\nimport { Remove } from \"./Options/Classes/Remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== \"remove\") {\n                return;\n            }\n            const removeNb = getRangeValue(options.interactivity.modes.remove.quantity);\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source?.remove);\n        }\n    }\n    reset() {\n    }\n}\n","import { Remover } from \"./Remover\";\nexport async function loadExternalRemoveInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRemove\", (container) => new Remover(container), refresh);\n}\nexport * from \"./Options/Classes/Remove\";\nexport * from \"./Options/Interfaces/IRemove\";\n","export class RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.factor = 100;\n        this.speed = 1;\n        this.maxSpeed = 50;\n        this.easing = \"ease-out-quad\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { RepulseBase } from \"./RepulseBase\";\nexport class RepulseDiv extends RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { RepulseBase } from \"./RepulseBase\";\nimport { RepulseDiv } from \"./RepulseDiv\";\nexport class Repulse extends RepulseBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new RepulseDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, getEasing, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Repulse } from \"./Options/Classes/Repulse\";\nexport class Repulser extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickRepulse = () => {\n            const container = this.container, repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            const repulse = container.repulse || { particles: [] };\n            if (!repulse.finish) {\n                if (!repulse.count) {\n                    repulse.count = 0;\n                }\n                repulse.count++;\n                if (repulse.count === container.particles.count) {\n                    repulse.finish = true;\n                }\n            }\n            if (repulse.clicking) {\n                const repulseDistance = container.retina.repulseModeDistance;\n                if (!repulseDistance || repulseDistance < 0) {\n                    return;\n                }\n                const repulseRadius = Math.pow(repulseDistance / 6, 3), mouseClickPos = container.interactivity.mouse.clickPosition;\n                if (mouseClickPos === undefined) {\n                    return;\n                }\n                const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, (p) => this.isEnabled(p));\n                for (const particle of query) {\n                    const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** 2, velocity = repulseOptions.speed, force = (-repulseRadius * velocity) / d;\n                    if (d <= repulseRadius) {\n                        repulse.particles.push(particle);\n                        const vect = Vector.create(dx, dy);\n                        vect.length = force;\n                        particle.velocity.setTo(vect);\n                    }\n                }\n            }\n            else if (repulse.clicking === false) {\n                for (const particle of repulse.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                repulse.particles = [];\n            }\n        };\n        this._hoverRepulse = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;\n            if (!repulseRadius || repulseRadius < 0 || !mousePos) {\n                return;\n            }\n            this._processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n        };\n        this._processRepulse = (position, repulseRadius, area, divRepulse) => {\n            const container = this.container, query = container.particles.quadTree.query(area, (p) => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position), velocity = (divRepulse?.speed ?? repulseOptions.speed) * repulseOptions.factor, repulseFactor = clamp(getEasing(repulseOptions.easing)(1 - distance / repulseRadius) * velocity, 0, repulseOptions.maxSpeed), normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * repulseFactor, distance === 0 ? velocity : (dy / distance) * repulseFactor);\n                particle.position.addTo(normVec);\n            }\n        };\n        this._singleSelectorRepulse = (selector, div) => {\n            const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n            if (!repulse) {\n                return;\n            }\n            const query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = divMode(divs, elem);\n                this._processRepulse(pos, repulseRadius, area, divRepulse);\n            });\n        };\n        this._engine = engine;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, repulseOpts = options.interactivity.modes.repulse;\n            if (!repulseOpts || mode !== \"repulse\") {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            const repulse = container.repulse;\n            repulse.clicking = true;\n            repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            repulse.particles = [];\n            repulse.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                repulse.clicking = false;\n            }, repulseOpts.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hover = events.onHover, hoverEnabled = hover.enable, hoverMode = hover.mode, click = events.onClick, clickEnabled = click.enable, clickMode = click.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"repulse\", hoverMode)) {\n            this._hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(\"repulse\", clickMode)) {\n            this._clickRepulse();\n        }\n        else {\n            divModeExecute(\"repulse\", divs, (selector, div) => this._singleSelectorRepulse(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv, hover = events.onHover, click = events.onClick, divRepulse = isDivModeEnabled(\"repulse\", divs);\n        if (!(divRepulse || (hover.enable && mouse.position) || (click.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = hover.mode, clickMode = click.mode;\n        return isInArray(\"repulse\", hoverMode) || isInArray(\"repulse\", clickMode) || divRepulse;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new Repulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source?.repulse);\n        }\n    }\n    reset() {\n    }\n}\n","import { Repulser } from \"./Repulser\";\nexport async function loadExternalRepulseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRepulse\", (container) => new Repulser(engine, container), refresh);\n}\nexport * from \"./Options/Classes/RepulseBase\";\nexport * from \"./Options/Classes/RepulseDiv\";\nexport * from \"./Options/Classes/Repulse\";\nexport * from \"./Options/Interfaces/IRepulseBase\";\nexport * from \"./Options/Interfaces/IRepulseDiv\";\nexport * from \"./Options/Interfaces/IRepulse\";\n","export class Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ExternalInteractorBase, getDistance, isInArray, } from \"tsparticles-engine\";\nimport { Slow } from \"./Options/Classes/Slow\";\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"slow\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source?.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slowOptions = options.interactivity.modes.slow;\n        if (!slowOptions || !radius || radius < 0 || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slowOptions.factor, { slow } = particle;\n        if (dist > radius) {\n            return;\n        }\n        slow.inRange = true;\n        slow.factor = proximityFactor / slowFactor;\n    }\n}\n","import { Slower } from \"./Slower\";\nexport async function loadExternalSlowInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalSlow\", (container) => new Slower(container), refresh);\n}\nexport * from \"./Options/Classes/Slow\";\nexport * from \"./Options/Interfaces/ISlow\";\n","export const InterlaceOffsets = [0, 4, 2, 1];\nexport const InterlaceSteps = [8, 8, 4, 2];\n","export class ByteStream {\n    constructor(bytes) {\n        this.pos = 0;\n        this.data = new Uint8ClampedArray(bytes);\n    }\n    getString(count) {\n        const slice = this.data.slice(this.pos, this.pos + count);\n        this.pos += slice.length;\n        return slice.reduce((acc, curr) => acc + String.fromCharCode(curr), \"\");\n    }\n    nextByte() {\n        return this.data[this.pos++];\n    }\n    nextTwoBytes() {\n        this.pos += 2;\n        return this.data[this.pos - 2] + (this.data[this.pos - 1] << 8);\n    }\n    readSubBlocks() {\n        let blockString = \"\", size = 0;\n        do {\n            size = this.data[this.pos++];\n            for (let count = size; --count >= 0; blockString += String.fromCharCode(this.data[this.pos++])) {\n            }\n        } while (size !== 0);\n        return blockString;\n    }\n    readSubBlocksBin() {\n        let size = 0, len = 0;\n        for (let offset = 0; (size = this.data[this.pos + offset]) !== 0; offset += size + 1) {\n            len += size;\n        }\n        const blockData = new Uint8Array(len);\n        for (let i = 0; (size = this.data[this.pos++]) !== 0;) {\n            for (let count = size; --count >= 0; blockData[i++] = this.data[this.pos++]) {\n            }\n        }\n        return blockData;\n    }\n    skipSubBlocks() {\n        for (; this.data[this.pos] !== 0; this.pos += this.data[this.pos] + 1) {\n        }\n        this.pos++;\n    }\n}\n","import { InterlaceOffsets, InterlaceSteps } from \"./Constants\";\nimport { ByteStream } from \"./ByteStream\";\nfunction parseColorTable(byteStream, count) {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n        colors.push({\n            r: byteStream.data[byteStream.pos],\n            g: byteStream.data[byteStream.pos + 1],\n            b: byteStream.data[byteStream.pos + 2],\n        });\n        byteStream.pos += 3;\n    }\n    return colors;\n}\nasync function parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex) {\n    switch (byteStream.nextByte()) {\n        case 249: {\n            const frame = gif.frames[getFrameIndex(false)];\n            byteStream.pos++;\n            const packedByte = byteStream.nextByte();\n            frame.GCreserved = (packedByte & 0xe0) >>> 5;\n            frame.disposalMethod = (packedByte & 0x1c) >>> 2;\n            frame.userInputDelayFlag = (packedByte & 2) === 2;\n            const transparencyFlag = (packedByte & 1) === 1;\n            frame.delayTime = byteStream.nextTwoBytes() * 0xa;\n            const transparencyIndex = byteStream.nextByte();\n            if (transparencyFlag) {\n                getTransparencyIndex(transparencyIndex);\n            }\n            byteStream.pos++;\n            break;\n        }\n        case 255: {\n            byteStream.pos++;\n            const applicationExtension = {\n                identifier: byteStream.getString(8),\n                authenticationCode: byteStream.getString(3),\n                data: byteStream.readSubBlocksBin(),\n            };\n            gif.applicationExtensions.push(applicationExtension);\n            break;\n        }\n        case 254: {\n            gif.comments.push([getFrameIndex(false), byteStream.readSubBlocks()]);\n            break;\n        }\n        case 1: {\n            if (gif.globalColorTable.length === 0) {\n                throw new EvalError(\"plain text extension without global color table\");\n            }\n            byteStream.pos++;\n            gif.frames[getFrameIndex(false)].plainTextData = {\n                left: byteStream.nextTwoBytes(),\n                top: byteStream.nextTwoBytes(),\n                width: byteStream.nextTwoBytes(),\n                height: byteStream.nextTwoBytes(),\n                charSize: {\n                    width: byteStream.nextTwoBytes(),\n                    height: byteStream.nextTwoBytes(),\n                },\n                foregroundColor: byteStream.nextByte(),\n                backgroundColor: byteStream.nextByte(),\n                text: byteStream.readSubBlocks(),\n            };\n            break;\n        }\n        default:\n            byteStream.skipSubBlocks();\n            break;\n    }\n}\nasync function parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    const frame = gif.frames[getFrameIndex(true)];\n    frame.left = byteStream.nextTwoBytes();\n    frame.top = byteStream.nextTwoBytes();\n    frame.width = byteStream.nextTwoBytes();\n    frame.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), localColorTableFlag = (packedByte & 0x80) === 0x80, interlacedFlag = (packedByte & 0x40) === 0x40;\n    frame.sortFlag = (packedByte & 0x20) === 0x20;\n    frame.reserved = (packedByte & 0x18) >>> 3;\n    const localColorCount = 1 << ((packedByte & 7) + 1);\n    if (localColorTableFlag) {\n        frame.localColorTable = parseColorTable(byteStream, localColorCount);\n    }\n    const getColor = (index) => {\n        const { r, g, b } = (localColorTableFlag ? frame.localColorTable : gif.globalColorTable)[index];\n        return { r, g, b, a: index === getTransparencyIndex(null) ? (avgAlpha ? ~~((r + g + b) / 3) : 0) : 255 };\n    };\n    const image = (() => {\n        try {\n            return new ImageData(frame.width, frame.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (image == null) {\n        throw new EvalError(\"GIF frame size is to large\");\n    }\n    const minCodeSize = byteStream.nextByte(), imageData = byteStream.readSubBlocksBin(), clearCode = 1 << minCodeSize;\n    const readBits = (pos, len) => {\n        const bytePos = pos >>> 3, bitPos = pos & 7;\n        return (((imageData[bytePos] + (imageData[bytePos + 1] << 8) + (imageData[bytePos + 2] << 16)) &\n            (((1 << len) - 1) << bitPos)) >>>\n            bitPos);\n    };\n    if (interlacedFlag) {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pass = 0; pass < 4; pass++) {\n            if (InterlaceOffsets[pass] < frame.height) {\n                for (let pixelPos = 0, lineIndex = 0;;) {\n                    const last = code;\n                    code = readBits(pos, size);\n                    pos += size + 1;\n                    if (code === clearCode) {\n                        size = minCodeSize + 1;\n                        dic.length = clearCode + 2;\n                        for (let i = 0; i < dic.length; i++) {\n                            dic[i] = i < clearCode ? [i] : [];\n                        }\n                    }\n                    else {\n                        if (code >= dic.length) {\n                            dic.push(dic[last].concat(dic[last][0]));\n                        }\n                        else if (last !== clearCode) {\n                            dic.push(dic[last].concat(dic[code][0]));\n                        }\n                        for (let i = 0; i < dic[code].length; i++) {\n                            const { r, g, b, a } = getColor(dic[code][i]);\n                            image.data.set([r, g, b, a], InterlaceOffsets[pass] * frame.width +\n                                InterlaceSteps[pass] * lineIndex +\n                                (pixelPos % (frame.width * 4)));\n                            pixelPos += 4;\n                        }\n                        if (dic.length === 1 << size && size < 0xc) {\n                            size++;\n                        }\n                    }\n                    if (pixelPos === frame.width * 4 * (lineIndex + 1)) {\n                        lineIndex++;\n                        if (InterlaceOffsets[pass] + InterlaceSteps[pass] * lineIndex >= frame.height) {\n                            break;\n                        }\n                    }\n                }\n            }\n            progressCallback?.(byteStream.pos / (byteStream.data.length - 1), getFrameIndex(false) + 1, image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n    }\n    else {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pixelPos = -4;;) {\n            const last = code;\n            code = readBits(pos, size);\n            pos += size;\n            if (code === clearCode) {\n                size = minCodeSize + 1;\n                dic.length = clearCode + 2;\n                for (let i = 0; i < dic.length; i++) {\n                    dic[i] = i < clearCode ? [i] : [];\n                }\n            }\n            else {\n                if (code === clearCode + 1) {\n                    break;\n                }\n                if (code >= dic.length) {\n                    dic.push(dic[last].concat(dic[last][0]));\n                }\n                else if (last !== clearCode) {\n                    dic.push(dic[last].concat(dic[code][0]));\n                }\n                for (let i = 0; i < dic[code].length; i++) {\n                    const { r, g, b, a } = getColor(dic[code][i]);\n                    image.data.set([r, g, b, a], (pixelPos += 4));\n                }\n                if (dic.length >= 1 << size && size < 0xc) {\n                    size++;\n                }\n            }\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n        progressCallback?.((byteStream.pos + 1) / byteStream.data.length, getFrameIndex(false) + 1, frame.image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n    }\n}\nasync function parseBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    switch (byteStream.nextByte()) {\n        case 59:\n            return true;\n        case 44:\n            await parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback);\n            break;\n        case 33:\n            await parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex);\n            break;\n        default:\n            throw new EvalError(\"undefined block found\");\n    }\n    return false;\n}\nexport function getGIFLoopAmount(gif) {\n    for (const extension of gif.applicationExtensions) {\n        if (extension.identifier + extension.authenticationCode !== \"NETSCAPE2.0\") {\n            continue;\n        }\n        return extension.data[1] + (extension.data[2] << 8);\n    }\n    return NaN;\n}\nexport async function decodeGIF(gifURL, progressCallback, avgAlpha) {\n    if (!avgAlpha)\n        avgAlpha = false;\n    const res = await fetch(gifURL);\n    if (!res.ok && res.status === 404) {\n        throw new EvalError(\"file not found\");\n    }\n    const buffer = await res.arrayBuffer();\n    const gif = {\n        width: 0,\n        height: 0,\n        totalTime: 0,\n        colorRes: 0,\n        pixelAspectRatio: 0,\n        frames: [],\n        sortFlag: false,\n        globalColorTable: [],\n        backgroundImage: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n        comments: [],\n        applicationExtensions: [],\n    }, byteStream = new ByteStream(new Uint8ClampedArray(buffer));\n    if (byteStream.getString(6) !== \"GIF89a\") {\n        throw new Error(\"not a supported GIF file\");\n    }\n    gif.width = byteStream.nextTwoBytes();\n    gif.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), globalColorTableFlag = (packedByte & 0x80) === 0x80;\n    gif.colorRes = (packedByte & 0x70) >>> 4;\n    gif.sortFlag = (packedByte & 8) === 8;\n    const globalColorCount = 1 << ((packedByte & 7) + 1), backgroundColorIndex = byteStream.nextByte();\n    gif.pixelAspectRatio = byteStream.nextByte();\n    if (gif.pixelAspectRatio !== 0) {\n        gif.pixelAspectRatio = (gif.pixelAspectRatio + 0xf) / 0x40;\n    }\n    if (globalColorTableFlag) {\n        gif.globalColorTable = parseColorTable(byteStream, globalColorCount);\n    }\n    const backgroundImage = (() => {\n        try {\n            return new ImageData(gif.width, gif.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (backgroundImage == null) {\n        throw new Error(\"GIF frame size is to large\");\n    }\n    const { r, g, b } = gif.globalColorTable[backgroundColorIndex];\n    backgroundImage.data.set(globalColorTableFlag ? [r, g, b, 255] : [0, 0, 0, 0]);\n    for (let i = 4; i < backgroundImage.data.length; i *= 2) {\n        backgroundImage.data.copyWithin(i, 0, i);\n    }\n    gif.backgroundImage = backgroundImage;\n    let frameIndex = -1, incrementFrameIndex = true, transparencyIndex = -1;\n    const getframeIndex = (increment) => {\n        if (increment) {\n            incrementFrameIndex = true;\n        }\n        return frameIndex;\n    };\n    const getTransparencyIndex = (newValue) => {\n        if (newValue != null) {\n            transparencyIndex = newValue;\n        }\n        return transparencyIndex;\n    };\n    try {\n        do {\n            if (incrementFrameIndex) {\n                gif.frames.push({\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0,\n                    disposalMethod: 0,\n                    image: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n                    plainTextData: null,\n                    userInputDelayFlag: false,\n                    delayTime: 0,\n                    sortFlag: false,\n                    localColorTable: [],\n                    reserved: 0,\n                    GCreserved: 0,\n                });\n                frameIndex++;\n                transparencyIndex = -1;\n                incrementFrameIndex = false;\n            }\n        } while (!(await parseBlock(byteStream, gif, avgAlpha, getframeIndex, getTransparencyIndex, progressCallback)));\n        gif.frames.length--;\n        for (const frame of gif.frames) {\n            if (frame.userInputDelayFlag && frame.delayTime === 0) {\n                gif.totalTime = Infinity;\n                break;\n            }\n            gif.totalTime += frame.delayTime;\n        }\n        return gif;\n    }\n    catch (error) {\n        if (error instanceof EvalError) {\n            throw new Error(`error while parsing frame ${frameIndex} \"${error.message}\"`);\n        }\n        throw error;\n    }\n}\n","import { errorPrefix, getLogger, getStyleFromHsl } from \"tsparticles-engine\";\nimport { decodeGIF, getGIFLoopAmount } from \"./GifUtils/Utils\";\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            getLogger().error(`${errorPrefix} loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function loadGifImage(image) {\n    if (image.type !== \"gif\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    try {\n        image.gifData = await decodeGIF(image.source);\n        image.gifLoopCount = getGIFLoopAmount(image.gifData) ?? 0;\n        if (image.gifLoopCount === 0) {\n            image.gifLoopCount = Infinity;\n        }\n    }\n    catch {\n        image.error = true;\n    }\n    image.loading = false;\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        getLogger().error(`${errorPrefix} Image not found`);\n        image.error = true;\n    }\n    else {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? 1), imageRes = {\n        color,\n        gif: imageData.gif,\n        data: {\n            ...image,\n            svgData: svgColoredData,\n        },\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: imageData.replaceColor ?? imageData.replace_color,\n        source: imageData.src,\n    };\n    return new Promise((resolve) => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        img.addEventListener(\"error\", async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = {\n                ...image,\n                error: false,\n                loading: true,\n            };\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        });\n        img.src = url;\n    });\n}\n","import { errorPrefix } from \"tsparticles-engine\";\nimport { replaceImageColor } from \"./Utils\";\nexport class ImageDrawer {\n    constructor(engine) {\n        this.loadImageShape = async (imageShape) => {\n            if (!this._engine.loadImage) {\n                throw new Error(`${errorPrefix} image shape not initialized`);\n            }\n            await this._engine.loadImage({\n                gif: imageShape.gif,\n                name: imageShape.name,\n                replaceColor: imageShape.replaceColor ?? imageShape.replace_color ?? false,\n                src: imageShape.src,\n            });\n        };\n        this._engine = engine;\n    }\n    addImage(image) {\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        this._engine.images.push(image);\n    }\n    draw(context, particle, radius, opacity, delta) {\n        const image = particle.image, element = image?.element;\n        if (!image) {\n            return;\n        }\n        context.globalAlpha = opacity;\n        if (image.gif && image.gifData) {\n            const offscreenCanvas = new OffscreenCanvas(image.gifData.width, image.gifData.height), offscreenContext = offscreenCanvas.getContext(\"2d\");\n            if (!offscreenContext) {\n                throw new Error(\"could not create offscreen canvas context\");\n            }\n            offscreenContext.imageSmoothingQuality = \"low\";\n            offscreenContext.imageSmoothingEnabled = false;\n            offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n            if (particle.gifLoopCount === undefined) {\n                particle.gifLoopCount = image.gifLoopCount ?? 0;\n            }\n            let frameIndex = particle.gifFrame ?? 0;\n            const pos = { x: -image.gifData.width * 0.5, y: -image.gifData.height * 0.5 }, frame = image.gifData.frames[frameIndex];\n            if (particle.gifTime === undefined) {\n                particle.gifTime = 0;\n            }\n            if (!frame.bitmap) {\n                return;\n            }\n            context.scale(radius / image.gifData.width, radius / image.gifData.height);\n            switch (frame.disposalMethod) {\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 0:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                    break;\n                case 1:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    break;\n                case 2:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                    if (image.gifData.globalColorTable.length === 0) {\n                        offscreenContext.putImageData(image.gifData.frames[0].image, pos.x + frame.left, pos.y + frame.top);\n                    }\n                    else {\n                        offscreenContext.putImageData(image.gifData.backgroundImage, pos.x, pos.y);\n                    }\n                    break;\n                case 3:\n                    {\n                        const previousImageData = offscreenContext.getImageData(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                        offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                        context.drawImage(offscreenCanvas, pos.x, pos.y);\n                        offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                        offscreenContext.putImageData(previousImageData, 0, 0);\n                    }\n                    break;\n            }\n            particle.gifTime += delta.value;\n            if (particle.gifTime > frame.delayTime) {\n                particle.gifTime -= frame.delayTime;\n                if (++frameIndex >= image.gifData.frames.length) {\n                    if (--particle.gifLoopCount <= 0) {\n                        return;\n                    }\n                    frameIndex = 0;\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                }\n                particle.gifFrame = frameIndex;\n            }\n            context.scale(image.gifData.width / radius, image.gifData.height / radius);\n        }\n        else if (element) {\n            const ratio = image.ratio, pos = {\n                x: -radius,\n                y: -radius,\n            };\n            context.drawImage(element, pos.x, pos.y, radius * 2, (radius * 2) / ratio);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (!options.preload || !this._engine.loadImage) {\n            return;\n        }\n        for (const imageData of options.preload) {\n            await this._engine.loadImage(imageData);\n        }\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const imageData = particle.shapeData, image = this._engine.images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            this.loadImageShape(imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const images = this._engine.images, imageData = particle.shapeData, color = particle.getFillColor(), image = images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        const replaceColor = imageData.replaceColor ?? imageData.replace_color ?? image.replaceColor;\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        (async () => {\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await replaceImageColor(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    gif: image.gif,\n                    gifData: image.gifData,\n                    gifLoopCount: image.gifLoopCount,\n                    loaded: true,\n                    ratio: imageData.width && imageData.height ? imageData.width / imageData.height : image.ratio ?? 1,\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = imageData.fill ?? particle.fill, close = imageData.close ?? particle.close, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.fill = imageShape.fill;\n            particle.close = imageShape.close;\n        })();\n    }\n}\n","export class Preload {\n    constructor() {\n        this.src = \"\";\n        this.gif = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.gif !== undefined) {\n            this.gif = data.gif;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.replaceColor !== undefined) {\n            this.replaceColor = data.replaceColor;\n        }\n        if (data.src !== undefined) {\n            this.src = data.src;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { Preload } from \"./Options/Classes/Preload\";\nexport class ImagePreloaderPlugin {\n    constructor(engine) {\n        this.id = \"imagePreloader\";\n        this._engine = engine;\n    }\n    getPlugin() {\n        return {};\n    }\n    loadOptions(options, source) {\n        if (!source || !source.preload) {\n            return;\n        }\n        if (!options.preload) {\n            options.preload = [];\n        }\n        const preloadOptions = options.preload;\n        for (const item of source.preload) {\n            const existing = preloadOptions.find((t) => t.name === item.name || t.src === item.src);\n            if (existing) {\n                existing.load(item);\n            }\n            else {\n                const preload = new Preload();\n                preload.load(item);\n                preloadOptions.push(preload);\n            }\n        }\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n","import { downloadSvgImage, loadGifImage, loadImage } from \"./Utils\";\nimport { ImageDrawer } from \"./ImageDrawer\";\nimport { ImagePreloaderPlugin } from \"./ImagePreloader\";\nimport { errorPrefix } from \"tsparticles-engine\";\nfunction addLoadImageToEngine(engine) {\n    if (engine.loadImage) {\n        return;\n    }\n    engine.loadImage = async (data) => {\n        if (!data.name && !data.src) {\n            throw new Error(`${errorPrefix} no image source provided`);\n        }\n        if (!engine.images) {\n            engine.images = [];\n        }\n        if (engine.images.find((t) => t.name === data.name || t.source === data.src)) {\n            return;\n        }\n        try {\n            const image = {\n                gif: data.gif ?? false,\n                name: data.name ?? data.src,\n                source: data.src,\n                type: data.src.substring(data.src.length - 3),\n                error: false,\n                loading: true,\n                replaceColor: data.replaceColor,\n                ratio: data.width && data.height ? data.width / data.height : undefined,\n            };\n            engine.images.push(image);\n            const imageFunc = data.gif ? loadGifImage : data.replaceColor ? downloadSvgImage : loadImage;\n            await imageFunc(image);\n        }\n        catch {\n            throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);\n        }\n    };\n}\nexport async function loadImageShape(engine, refresh = true) {\n    addLoadImageToEngine(engine);\n    const preloader = new ImagePreloaderPlugin(engine);\n    await engine.addPlugin(preloader, refresh);\n    await engine.addShape([\"image\", \"images\"], new ImageDrawer(engine), refresh);\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDelay extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDuration extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.0001;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { LifeDelay } from \"./LifeDelay\";\nimport { LifeDuration } from \"./LifeDuration\";\nexport class Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay();\n        this.duration = new LifeDuration();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\n","import { getRandom, getRangeValue, randomInRange, setRangeValue, } from \"tsparticles-engine\";\nimport { Life } from \"./Options/Classes/Life\";\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            delayTime: 0,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            time: 0,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= 0) {\n            particle.life.duration = -1;\n        }\n        if (particle.life.count <= 0) {\n            particle.life.count = -1;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > 0;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source?.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        const life = particle.life;\n        let justSpawned = false;\n        if (particle.spawning) {\n            life.delayTime += delta.value;\n            if (life.delayTime >= particle.life.delay) {\n                justSpawned = true;\n                particle.spawning = false;\n                life.delayTime = 0;\n                life.time = 0;\n            }\n            else {\n                return;\n            }\n        }\n        if (life.duration === -1) {\n            return;\n        }\n        if (particle.spawning) {\n            return;\n        }\n        if (justSpawned) {\n            life.time = 0;\n        }\n        else {\n            life.time += delta.value;\n        }\n        if (life.time < life.duration) {\n            return;\n        }\n        life.time = 0;\n        if (particle.life.count > 0) {\n            particle.life.count--;\n        }\n        if (particle.life.count === 0) {\n            particle.destroy();\n            return;\n        }\n        const canvasSize = this.container.canvas.size, widthRange = setRangeValue(0, canvasSize.width), heightRange = setRangeValue(0, canvasSize.width);\n        particle.position.x = randomInRange(widthRange);\n        particle.position.y = randomInRange(heightRange);\n        particle.spawning = true;\n        life.delayTime = 0;\n        life.time = 0;\n        particle.reset();\n        const lifeOptions = particle.options.life;\n        if (lifeOptions) {\n            life.delay = getRangeValue(lifeOptions.delay.value) * 1000;\n            life.duration = getRangeValue(lifeOptions.duration.value) * 1000;\n        }\n    }\n}\n","import { LifeUpdater } from \"./LifeUpdater\";\nexport async function loadLifeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"life\", (container) => new LifeUpdater(container), refresh);\n}\n","export class LineDrawer {\n    draw(context, particle, radius) {\n        const shapeData = particle.shapeData;\n        context.moveTo(-radius / 2, 0);\n        context.lineTo(radius / 2, 0);\n        context.lineCap = shapeData?.cap ?? \"butt\";\n    }\n    getSidesCount() {\n        return 1;\n    }\n}\n","import { LineDrawer } from \"./LineDrawer\";\nexport async function loadLineShape(engine, refresh = true) {\n    await engine.addShape(\"line\", new LineDrawer(), refresh);\n}\n","import { isSsr } from \"tsparticles-engine\";\nexport class ParallaxMover {\n    init() {\n    }\n    isEnabled(particle) {\n        return (!isSsr() &&\n            !particle.destroyed &&\n            particle.container.actualOptions.interactivity.events.onHover.parallax.enable);\n    }\n    move(particle) {\n        const container = particle.container, options = container.actualOptions, parallaxOptions = options.interactivity.events.onHover.parallax;\n        if (isSsr() || !parallaxOptions.enable) {\n            return;\n        }\n        const parallaxForce = parallaxOptions.force, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasSize = container.canvas.size, canvasCenter = {\n            x: canvasSize.width / 2,\n            y: canvasSize.height / 2,\n        }, parallaxSmooth = parallaxOptions.smooth, factor = particle.getRadius() / parallaxForce, centerDistance = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        }, { offset } = particle;\n        offset.x += (centerDistance.x - offset.x) / parallaxSmooth;\n        offset.y += (centerDistance.y - offset.y) / parallaxSmooth;\n    }\n}\n","import { ParallaxMover } from \"./ParallaxMover\";\nexport async function loadParallaxMover(engine, refresh = true) {\n    await engine.addMover(\"parallax\", () => new ParallaxMover(), refresh);\n}\n","export class ParticlesInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"particles\";\n    }\n}\n","import { ParticlesInteractorBase, getDistances, } from \"tsparticles-engine\";\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1) {\n        const container = this.container, distance = p1.retina.attractDistance ?? container.retina.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * 1000), ay = dy / (rotate.y * 1000), p1Factor = p2.size.value / p1.size.value, p2Factor = 1 / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n","import { Attractor } from \"./Attractor\";\nexport async function loadParticlesAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesAttract\", (container) => new Attractor(container), refresh);\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n    const factor = clamp((p1.options.collisions.absorb.speed * delta.factor) / 10, 0, r2);\n    p1.size.value += factor / 2;\n    p2.size.value -= factor;\n    if (r2 <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n    }\n}\nexport function absorb(p1, p2, delta, pixelRatio) {\n    const r1 = p1.getRadius(), r2 = p2.getRadius();\n    if (r1 === undefined && r2 !== undefined) {\n        p1.destroy();\n    }\n    else if (r1 !== undefined && r2 === undefined) {\n        p2.destroy();\n    }\n    else if (r1 !== undefined && r2 !== undefined) {\n        if (r1 >= r2) {\n            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n        }\n        else {\n            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n        }\n    }\n}\n","import { circleBounce, circleBounceDataFromParticle, getRangeValue } from \"tsparticles-engine\";\nconst fixBounceSpeed = (p) => {\n    if (p.collisionMaxSpeed === undefined) {\n        p.collisionMaxSpeed = getRangeValue(p.options.collisions.maxSpeed);\n    }\n    if (p.velocity.length > p.collisionMaxSpeed) {\n        p.velocity.length = p.collisionMaxSpeed;\n    }\n};\nexport function bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n    fixBounceSpeed(p1);\n    fixBounceSpeed(p2);\n}\n","import { absorb } from \"./Absorb\";\nimport { bounce } from \"./Bounce\";\nimport { destroy } from \"./Destroy\";\nexport function resolveCollision(p1, p2, delta, pixelRatio) {\n    switch (p1.options.collisions.mode) {\n        case \"absorb\": {\n            absorb(p1, p2, delta, pixelRatio);\n            break;\n        }\n        case \"bounce\": {\n            bounce(p1, p2);\n            break;\n        }\n        case \"destroy\": {\n            destroy(p1, p2);\n            break;\n        }\n    }\n}\n","import { bounce } from \"./Bounce\";\nexport function destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        const deleteP = p1.getRadius() >= p2.getRadius() ? p2 : p1;\n        deleteP.destroy();\n    }\n}\n","import { ParticlesInteractorBase, getDistance } from \"tsparticles-engine\";\nimport { resolveCollision } from \"./ResolveCollision\";\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1, delta) {\n        if (p1.destroyed || p1.spawning) {\n            return;\n        }\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n","import { Collider } from \"./Collider\";\nexport async function loadParticlesCollisionsInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesCollisions\", (container) => new Collider(container), refresh);\n}\n","import { Circle, Rectangle } from \"tsparticles-engine\";\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = { ...canvasSize };\n    }\n    contains(point) {\n        const { width, height } = this.canvasSize;\n        const { x, y } = point;\n        return (super.contains(point) ||\n            super.contains({ x: x - width, y }) ||\n            super.contains({ x: x - width, y: y - height }) ||\n            super.contains({ x, y: y - height }));\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * 2);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.color.value = \"#000\";\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nimport { LinksShadow } from \"./LinksShadow\";\nimport { LinksTriangle } from \"./LinksTriangle\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { Circle, ParticlesInteractorBase, getDistances, getLinkRandomColor, } from \"tsparticles-engine\";\nimport { CircleWarp } from \"./CircleWarp\";\nimport { Links } from \"./Options/Classes/Links\";\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    const { dx, dy, distance } = getDistances(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const absDiffs = {\n        x: Math.abs(dx),\n        y: Math.abs(dy),\n    }, warpDistances = {\n        x: Math.min(absDiffs.x, canvasSize.width - absDiffs.x),\n        y: Math.min(absDiffs.y, canvasSize.height - absDiffs.y),\n    };\n    return Math.sqrt(warpDistances.x ** 2 + warpDistances.y ** 2);\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n        this._setColor = (p1) => {\n            if (!p1.options.links) {\n                return;\n            }\n            const container = this.linkContainer, linksOptions = p1.options.links;\n            let linkColor = linksOptions.id === undefined\n                ? container.particles.linksColor\n                : container.particles.linksColors.get(linksOptions.id);\n            if (linkColor) {\n                return;\n            }\n            const optColor = linksOptions.color;\n            linkColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            if (linksOptions.id === undefined) {\n                container.particles.linksColor = linkColor;\n            }\n            else {\n                container.particles.linksColors.set(linksOptions.id, linkColor);\n            }\n        };\n        this.linkContainer = container;\n    }\n    clear() {\n    }\n    init() {\n        this.linkContainer.particles.linksColor = undefined;\n        this.linkContainer.particles.linksColors = new Map();\n    }\n    async interact(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = p1.retina.linksDistance ?? 0, warp = linkOpt1.warp, range = warp\n            ? new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Circle(pos1.x, pos1.y, optDistance), query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !linkOpt2?.enable ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.some((t) => t.destination === p2) ||\n                p2.links.some((t) => t.destination === p1)) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                continue;\n            }\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\n            this._setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        return !!particle.options.links?.enable;\n    }\n    loadParticlesOptions(options, ...sources) {\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load(source?.links ?? source?.lineLinked ?? source?.line_linked);\n        }\n    }\n    reset() {\n    }\n}\n","import { Linker } from \"./Linker\";\nexport async function loadLinksInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesLinks\", (container) => new Linker(container), refresh);\n}\n","import { drawLine, drawTriangle, getDistance, getDistances, getRandom, getStyleFromRgb, rangeColorToRgb, } from \"tsparticles-engine\";\nexport function drawLinkLine(params) {\n    let drawn = false;\n    const { begin, end, maxDistance, context, canvasSize, width, backgroundMask, colorLine, opacity, links } = params;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (links.warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    const { shadow } = links;\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(params) {\n    const { context, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle } = params;\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\nexport function getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nexport function setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map((t) => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\n","import { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb, } from \"tsparticles-engine\";\nimport { drawLinkLine, drawLinkTriangle, setLinkFrequency } from \"./Utils\";\nexport class LinkInstance {\n    constructor(container) {\n        this.container = container;\n        this._drawLinkLine = (p1, link) => {\n            const p1LinksOptions = p1.options.links;\n            if (!p1LinksOptions?.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n            let opacity = link.opacity;\n            container.canvas.draw((ctx) => {\n                let colorLine;\n                const twinkle = p1.options.twinkle?.lines;\n                if (twinkle?.enable) {\n                    const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(twinkle.color), twinkling = getRandom() < twinkleFreq;\n                    if (twinkling && twinkleRgb) {\n                        colorLine = twinkleRgb;\n                        opacity = getRangeValue(twinkle.opacity);\n                    }\n                }\n                if (!colorLine) {\n                    const linkColor = p1LinksOptions.id !== undefined\n                        ? container.particles.linksColors.get(p1LinksOptions.id)\n                        : container.particles.linksColor;\n                    colorLine = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorLine) {\n                    return;\n                }\n                const width = p1.retina.linksWidth ?? 0, maxDistance = p1.retina.linksDistance ?? 0, { backgroundMask } = options;\n                drawLinkLine({\n                    context: ctx,\n                    width,\n                    begin: pos1,\n                    end: pos2,\n                    maxDistance,\n                    canvasSize: container.canvas.size,\n                    links: p1LinksOptions,\n                    backgroundMask: backgroundMask,\n                    colorLine,\n                    opacity,\n                });\n            });\n        };\n        this._drawLinkTriangle = (p1, link1, link2) => {\n            const linksOptions = p1.options.links;\n            if (!linksOptions?.enable) {\n                return;\n            }\n            const triangleOptions = linksOptions.triangles;\n            if (!triangleOptions.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, opacityTriangle = triangleOptions.opacity ?? (link1.opacity + link2.opacity) / 2;\n            if (opacityTriangle <= 0) {\n                return;\n            }\n            container.canvas.draw((ctx) => {\n                const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = p1.retina.linksDistance ?? 0;\n                if (getDistance(pos1, pos2) > linksDistance ||\n                    getDistance(pos3, pos2) > linksDistance ||\n                    getDistance(pos3, pos1) > linksDistance) {\n                    return;\n                }\n                let colorTriangle = rangeColorToRgb(triangleOptions.color);\n                if (!colorTriangle) {\n                    const linkColor = linksOptions.id !== undefined\n                        ? container.particles.linksColors.get(linksOptions.id)\n                        : container.particles.linksColor;\n                    colorTriangle = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorTriangle) {\n                    return;\n                }\n                drawLinkTriangle({\n                    context: ctx,\n                    pos1,\n                    pos2,\n                    pos3,\n                    backgroundMask: options.backgroundMask,\n                    colorTriangle,\n                    opacityTriangle,\n                });\n            });\n        };\n        this._drawTriangles = (options, p1, link, p1Links) => {\n            const p2 = link.destination;\n            if (!(options.links?.triangles.enable && p2.options.links?.triangles.enable)) {\n                return;\n            }\n            const vertices = p2.links?.filter((t) => {\n                const linkFreq = this._getLinkFrequency(p2, t.destination);\n                return (p2.options.links &&\n                    linkFreq <= p2.options.links.frequency &&\n                    p1Links.findIndex((l) => l.destination === t.destination) >= 0);\n            });\n            if (!vertices?.length) {\n                return;\n            }\n            for (const vertex of vertices) {\n                const p3 = vertex.destination, triangleFreq = this._getTriangleFrequency(p1, p2, p3);\n                if (triangleFreq > options.links.triangles.frequency) {\n                    continue;\n                }\n                this._drawLinkTriangle(p1, link, vertex);\n            }\n        };\n        this._getLinkFrequency = (p1, p2) => {\n            return setLinkFrequency([p1, p2], this._freqs.links);\n        };\n        this._getTriangleFrequency = (p1, p2, p3) => {\n            return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n        };\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        const { links, options } = particle;\n        if (!links || links.length <= 0) {\n            return;\n        }\n        const p1Links = links.filter((l) => options.links && this._getLinkFrequency(particle, l.destination) <= options.links.frequency);\n        for (const link of p1Links) {\n            this._drawTriangles(options, particle, link, p1Links);\n            if (link.opacity > 0 && (particle.retina.linksWidth ?? 0) > 0) {\n                this._drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this.container.retina.pixelRatio, { retina } = particle, { distance, width } = particle.options.links;\n        retina.linksDistance = distance * ratio;\n        retina.linksWidth = width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n}\n","import { LinkInstance } from \"./LinkInstance\";\nclass LinksPlugin {\n    constructor() {\n        this.id = \"links\";\n    }\n    getPlugin(container) {\n        return new LinkInstance(container);\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\nexport async function loadLinksPlugin(engine, refresh = true) {\n    const plugin = new LinksPlugin();\n    await engine.addPlugin(plugin, refresh);\n}\n","import { loadLinksInteraction } from \"./interaction\";\nimport { loadLinksPlugin } from \"./plugin\";\nexport async function loadParticlesLinksInteraction(engine, refresh = true) {\n    await loadLinksInteraction(engine, refresh);\n    await loadLinksPlugin(engine, refresh);\n}\nexport * from \"./Options/Classes/Links\";\nexport * from \"./Options/Classes/LinksShadow\";\nexport * from \"./Options/Classes/LinksTriangle\";\nexport * from \"./Options/Interfaces/ILinks\";\nexport * from \"./Options/Interfaces/ILinksShadow\";\nexport * from \"./Options/Interfaces/ILinksTriangle\";\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class PolygonDrawerBase {\n    draw(context, particle, radius) {\n        const start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius), sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides, interiorAngle = Math.PI - (Math.PI * interiorAngleDegrees) / 180;\n        if (!context) {\n            return;\n        }\n        context.beginPath();\n        context.translate(start.x, start.y);\n        context.moveTo(0, 0);\n        for (let i = 0; i < sideCount; i++) {\n            context.lineTo(side.length, 0);\n            context.translate(side.length, 0);\n            context.rotate(interiorAngle);\n        }\n    }\n    getSidesCount(particle) {\n        const polygon = particle.shapeData;\n        return Math.round(getRangeValue(polygon?.sides ?? polygon?.nb_sides ?? 5));\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class PolygonDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius / (particle.sides / 3.5),\n            y: -radius / (2.66 / 3.5),\n        };\n    }\n    getSidesData(particle, radius) {\n        const sides = particle.sides;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * 2.66) / (sides / 3),\n        };\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class TriangleDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / 1.66,\n        };\n    }\n    getSidesCount() {\n        return 3;\n    }\n    getSidesData(particle, radius) {\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: radius * 2,\n        };\n    }\n}\n","import { PolygonDrawer } from \"./PolygonDrawer\";\nimport { TriangleDrawer } from \"./TriangleDrawer\";\nexport async function loadGenericPolygonShape(engine, refresh = true) {\n    await engine.addShape(\"polygon\", new PolygonDrawer(), refresh);\n}\nexport async function loadTriangleShape(engine, refresh = true) {\n    await engine.addShape(\"triangle\", new TriangleDrawer(), refresh);\n}\nexport async function loadPolygonShape(engine, refresh = true) {\n    await loadGenericPolygonShape(engine, refresh);\n    await loadTriangleShape(engine, refresh);\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom, } from \"tsparticles-engine\";\nimport { RotateAnimation } from \"./RotateAnimation\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = \"clockwise\";\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n","import { getRandom, getRangeValue, } from \"tsparticles-engine\";\nimport { Rotate } from \"./Options/Classes/Rotate\";\nfunction updateRotate(particle, delta) {\n    const rotate = particle.rotate, rotateOptions = particle.options.rotate;\n    if (!rotate || !rotateOptions) {\n        return;\n    }\n    const rotateAnimation = rotateOptions.animation, speed = (rotate.velocity ?? 0) * delta.factor, max = 2 * Math.PI, decay = rotate.decay ?? 1;\n    if (!rotateAnimation.enable) {\n        return;\n    }\n    switch (rotate.status) {\n        case \"increasing\":\n            rotate.value += speed;\n            if (rotate.value > max) {\n                rotate.value -= max;\n            }\n            break;\n        case \"decreasing\":\n        default:\n            rotate.value -= speed;\n            if (rotate.value < 0) {\n                rotate.value += max;\n            }\n            break;\n    }\n    if (rotate.velocity && decay !== 1) {\n        rotate.velocity *= decay;\n    }\n}\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: (getRangeValue(rotateOptions.value) * Math.PI) / 180,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (rotateDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.rotate.status = \"decreasing\";\n                break;\n            case \"clockwise\":\n                particle.rotate.status = \"increasing\";\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = 1 - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && rotate.animation.enable && !rotate.path;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source?.rotate);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRotate(particle, delta);\n        particle.rotation = particle.rotate?.value ?? 0;\n    }\n}\n","import { RotateUpdater } from \"./RotateUpdater\";\nexport async function loadRotateUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"rotate\", (container) => new RotateUpdater(container), refresh);\n}\n","const fixFactor = Math.sqrt(2);\nexport class SquareDrawer {\n    draw(context, particle, radius) {\n        const fixedRadius = radius / fixFactor, fixedDiameter = fixedRadius * 2;\n        context.rect(-fixedRadius, -fixedRadius, fixedDiameter, fixedDiameter);\n    }\n    getSidesCount() {\n        return 4;\n    }\n}\n","import { SquareDrawer } from \"./SquareDrawer\";\nexport async function loadSquareShape(engine, refresh = true) {\n    await engine.addShape([\"edge\", \"square\"], new SquareDrawer(), refresh);\n}\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class StarDrawer {\n    draw(context, particle, radius) {\n        const sides = particle.sides, inset = particle.starInset ?? 2;\n        context.moveTo(0, 0 - radius);\n        for (let i = 0; i < sides; i++) {\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius * inset);\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius);\n        }\n    }\n    getSidesCount(particle) {\n        const star = particle.shapeData;\n        return Math.round(getRangeValue(star?.sides ?? star?.nb_sides ?? 5));\n    }\n    particleInit(container, particle) {\n        const star = particle.shapeData, inset = getRangeValue(star?.inset ?? 2);\n        particle.starInset = inset;\n    }\n}\n","import { StarDrawer } from \"./StarDrawer\";\nexport async function loadStarShape(engine, refresh = true) {\n    await engine.addShape(\"star\", new StarDrawer(), refresh);\n}\n","import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateStrokeColor(particle, delta) {\n    if (!particle.strokeColor || !particle.strokeAnimation) {\n        return;\n    }\n    const { h, s, l } = particle.strokeColor, { h: hAnimation, s: sAnimation, l: lAnimation } = particle.strokeAnimation;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n","import { getHslAnimationFromHsl, getRangeValue, itemFromSingleOrMultiple, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { updateStrokeColor } from \"./Utils\";\nexport class StrokeColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, options = particle.options;\n        const stroke = itemFromSingleOrMultiple(options.stroke, particle.id, options.reduceDuplicates);\n        particle.strokeWidth = getRangeValue(stroke.width) * container.retina.pixelRatio;\n        particle.strokeOpacity = getRangeValue(stroke.opacity ?? 1);\n        particle.strokeAnimation = stroke.color?.animation;\n        const strokeHslColor = rangeColorToHsl(stroke.color) ?? particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const color = particle.strokeAnimation, { strokeColor } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((strokeColor?.h.value !== undefined && strokeColor.h.enable) ||\n                (strokeColor?.s.value !== undefined && strokeColor.s.enable) ||\n                (strokeColor?.l.value !== undefined && strokeColor.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateStrokeColor(particle, delta);\n    }\n}\n","import { StrokeColorUpdater } from \"./StrokeColorUpdater\";\nexport async function loadStrokeColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"strokeColor\", (container) => new StrokeColorUpdater(container), refresh);\n}\n","import { executeOnSingleOrMultiple, isInArray, itemFromSingleOrMultiple, loadFont, } from \"tsparticles-engine\";\nexport const validTypes = [\"text\", \"character\", \"char\"];\nexport class TextDrawer {\n    draw(context, particle, radius, opacity) {\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        if (particle.text === undefined) {\n            particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n        }\n        const text = particle.text, style = character.style ?? \"\", weight = character.weight ?? \"400\", size = Math.round(radius) * 2, font = character.font ?? \"Verdana\", fill = particle.fill, offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        context.globalAlpha = opacity;\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (validTypes.find((t) => isInArray(t, options.particles.shape.type))) {\n            const shapeOptions = validTypes\n                .map((t) => options.particles.shape.options[t])\n                .find((t) => !!t), promises = [];\n            executeOnSingleOrMultiple(shapeOptions, (shape) => {\n                promises.push(loadFont(shape.font, shape.weight));\n            });\n            await Promise.all(promises);\n        }\n    }\n    particleInit(container, particle) {\n        if (!particle.shape || !validTypes.includes(particle.shape)) {\n            return;\n        }\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n    }\n}\n","import { TextDrawer, validTypes } from \"./TextDrawer\";\nexport async function loadTextShape(engine, refresh = true) {\n    await engine.addShape(validTypes, new TextDrawer(), refresh);\n}\n","import { initPjs } from \"tsparticles-particles.js\";\nimport { loadBasic } from \"tsparticles-basic\";\nimport { loadEasingQuadPlugin } from \"tsparticles-plugin-easing-quad\";\nimport { loadExternalAttractInteraction } from \"tsparticles-interaction-external-attract\";\nimport { loadExternalBounceInteraction } from \"tsparticles-interaction-external-bounce\";\nimport { loadExternalBubbleInteraction } from \"tsparticles-interaction-external-bubble\";\nimport { loadExternalConnectInteraction } from \"tsparticles-interaction-external-connect\";\nimport { loadExternalGrabInteraction } from \"tsparticles-interaction-external-grab\";\nimport { loadExternalPauseInteraction } from \"tsparticles-interaction-external-pause\";\nimport { loadExternalPushInteraction } from \"tsparticles-interaction-external-push\";\nimport { loadExternalRemoveInteraction } from \"tsparticles-interaction-external-remove\";\nimport { loadExternalRepulseInteraction } from \"tsparticles-interaction-external-repulse\";\nimport { loadExternalSlowInteraction } from \"tsparticles-interaction-external-slow\";\nimport { loadImageShape } from \"tsparticles-shape-image\";\nimport { loadLifeUpdater } from \"tsparticles-updater-life\";\nimport { loadLineShape } from \"tsparticles-shape-line\";\nimport { loadParallaxMover } from \"tsparticles-move-parallax\";\nimport { loadParticlesAttractInteraction } from \"tsparticles-interaction-particles-attract\";\nimport { loadParticlesCollisionsInteraction } from \"tsparticles-interaction-particles-collisions\";\nimport { loadParticlesLinksInteraction } from \"tsparticles-interaction-particles-links\";\nimport { loadPolygonShape } from \"tsparticles-shape-polygon\";\nimport { loadRotateUpdater } from \"tsparticles-updater-rotate\";\nimport { loadSquareShape } from \"tsparticles-shape-square\";\nimport { loadStarShape } from \"tsparticles-shape-star\";\nimport { loadStrokeColorUpdater } from \"tsparticles-updater-stroke-color\";\nimport { loadTextShape } from \"tsparticles-shape-text\";\nexport async function loadSlim(engine, refresh = true) {\n    initPjs(engine);\n    await loadParallaxMover(engine, false);\n    await loadExternalAttractInteraction(engine, false);\n    await loadExternalBounceInteraction(engine, false);\n    await loadExternalBubbleInteraction(engine, false);\n    await loadExternalConnectInteraction(engine, false);\n    await loadExternalGrabInteraction(engine, false);\n    await loadExternalPauseInteraction(engine, false);\n    await loadExternalPushInteraction(engine, false);\n    await loadExternalRemoveInteraction(engine, false);\n    await loadExternalRepulseInteraction(engine, false);\n    await loadExternalSlowInteraction(engine, false);\n    await loadParticlesAttractInteraction(engine, false);\n    await loadParticlesCollisionsInteraction(engine, false);\n    await loadParticlesLinksInteraction(engine, false);\n    await loadEasingQuadPlugin();\n    await loadImageShape(engine, false);\n    await loadLineShape(engine, false);\n    await loadPolygonShape(engine, false);\n    await loadSquareShape(engine, false);\n    await loadStarShape(engine, false);\n    await loadTextShape(engine, false);\n    await loadLifeUpdater(engine, false);\n    await loadRotateUpdater(engine, false);\n    await loadStrokeColorUpdater(engine, false);\n    await loadBasic(engine, refresh);\n}\n"],"names":["isObject","val","deepCompare","obj1","obj2","excludeKeyFn","arguments","length","undefined","keys1","Object","keys","filter","key","keys2","value1","value2","Array","isArray","deepCompareArrays","arr1","arr2","i","val1","val2","defaultId","Particles","Component","constructor","props","super","this","state","init","library","destroy","setState","shouldComponentUpdate","nextProps","_nextProps$options","_this$props$options","nextOptions","options","params","currentOptions","url","id","canvasClassName","className","height","width","style","loaded","startsWith","componentDidUpdate","refresh","forceUpdate","then","componentDidMount","tsParticles","async","loadParticles","componentWillUnmount","render","React","_ref","_this$props$id","_this$props$options2","defaultProps","container","current","Circle","Range","x","y","radius","contains","point","getDistance","position","intersects","range","pos1","pos2","distPos","Math","abs","r","sqrt","Rectangle","size","pow","generatedAttribute","mouseDownEvent","mouseUpEvent","mouseLeaveEvent","mouseOutEvent","mouseMoveEvent","touchStartEvent","touchEndEvent","touchMoveEvent","touchCancelEvent","resizeEvent","visibilityChangeEvent","errorPrefix","w","h","pos","size2","w2","h2","Vector","Vector3d","xOrCoords","origin","create","static","source","z","_updateFromAngle","angle","cos","sin","isNumber","coords3d","Error","concat","atan2","getLengthSq","add","v","addTo","copy","clone","distanceTo","sub","distanceToSq","div","n","divTo","mult","multTo","normalize","rotate","setTo","c","v3d","subFrom","OptionsColor","value","data","color","load","isString","Random","enable","minimumValue","ValueWithRandom","random","isBoolean","setRangeValue","drawLine","context","begin","end","beginPath","moveTo","lineTo","closePath","drawTriangle","p1","p2","p3","paintBase","dimension","baseColor","fillStyle","fillRect","paintImage","image","opacity","globalAlpha","drawImage","clear","clearRect","drawParticle","_transform$a","_transform$b","_transform$c","_transform$d","_particle$strokeWidth","particle","delta","colorStyles","backgroundMask","composite","shadow","transform","getPosition","rotation","pathRotation","velocity","rotateData","transformData","a","b","d","setTransform","globalCompositeOperation","shadowColor","shadowBlur","blur","getStyleFromRgb","shadowOffsetX","offset","shadowOffsetY","fill","strokeWidth","lineWidth","stroke","strokeStyle","shape","drawer","drawers","get","draw","retina","pixelRatio","drawShape","close","afterEffect","drawShapeAfterEffect","drawPlugin","plugin","drawParticlePlugin","alterHsl","type","s","l","randomColorValue","midColorValue","colorManagers","Map","addColorManager","manager","set","hue2rgb","p","q","t","stringToRgba","input","stringPrefix","parseString","hexFixed","replace","_","g","result","exec","parseInt","rangeColorToRgb","index","useIndex","colorToRgb","itemFromArray","res","handleRangeColor","getRandomRgbColor","stringToRgb","handleColor","rangeColorToHsl","rgb","rgbToHsl","r1","g1","b1","max","min","hslToRgb","hsl","hslPercent","floor","hslaToRgba","hsla","rgbResult","fixedMin","randomInRange","getStyleFromHsl","colorMix","color1","color2","size1","rgb1","rgb2","mix","getLinkColor","linkColor","_p1$getFillColor","_p2$getFillColor","sourceColor","getFillColor","getStrokeColor","destColor","getRadius","hslColor","getLinkRandomColor","optColor","blink","consent","getHslFromAnimation","animation","getHslAnimationFromHsl","animationOptions","reduceFactor","resColor","setColorAnimation","colorValue","colorAnimation","getRangeValue","speed","decay","status","loops","maxLoops","count","time","delayTime","delay","sync","getRandom","initialValue","_random","easings","addEasing","name","easing","getEasing","clamp","num","comp1","comp2","weight1","weight2","getRangeMax","getRangeMin","getValue","getDistances","pointA","pointB","dx","dy","distance","getParticleDirectionAngle","direction","center","PI","getParticleBaseVelocity","baseVelocity","collisionVelocity","v1","v2","m1","m2","calcExactPositionOrRandomFromSize","_data$position$x2","_data$position5","_data$position$y2","_data$position6","parseAlpha","endsWith","parseFloat","_logger","debug","console","error","info","log","verbose","warning","warn","getLogger","rectSideBounce","bounced","pSide","pOtherSide","rectSide","rectOtherSide","factor","isSsr","window","document","safeMatchMedia","query","matchMedia","safeMutationObserver","callback","MutationObserver","isInArray","array","indexOf","loadFont","font","weight","fonts","arrayRandomIndex","isPointInside","bounds","inside","top","right","left","bottom","areBoundsInside","calculateBounds","deepExtend","destination","_len","sources","_key","sourceIsArray","destDict","map","isDivModeEnabled","mode","divs","findItemFromSingleOrMultiple","divModeExecute","executeOnSingleOrMultiple","divMode","selectors","selector","singleDivModeExecute","element","matches","some","checkSelector","circleBounceDataFromParticle","mass","getMass","bounce","horizontal","vertical","circleBounce","xVelocityDiff","yVelocityDiff","xDist","yDist","u1","u2","vFinal1","vFinal2","rectBounce","divBounds","resH","resV","obj","item","itemFromSingleOrMultiple","find","initParticleNumericAnimationValue","pxRatio","valueRange","autoStatus","startValue","getPositionOrSize","positionOrSize","canvasSize","rest","arg","isFunction","setTransformValue","newFactor","newValue","_factor$key","Canvas","_applyPostDrawUpdaters","updater","_postDrawUpdaters","afterDraw","_applyPreDrawUpdaters","ctx","zOpacity","_preDrawUpdaters","getColorStyles","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","_resizePlugins","resize","_getPluginParticleColors","fColor","sColor","_colorPlugins","particleFillColor","particleStrokeColor","_initCover","cover","actualOptions","coverRgb","coverColor","_coverColorStyle","_initStyle","_fullScreen","_originalStyle","_setFullScreenStyle","_resetOriginalStyle","setProperty","_initTrail","trail","particles","move","trailFill","fillColor","_trailFill","Promise","resolve","reject","img","createElement","addEventListener","evt","src","_paintBase","_paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","observe","attributes","originalStyle","zIndex","_mutationObserver","priority","fullScreen","toString","_context","_generated","paint","stop","remove","cb","_particle$getStrokeCo","spawning","destroyed","pfColor","psColor","_particle$bubble$opac","_particle$opacity","_particle$strokeOpaci","zIndexOptions","zOpacityFactor","zIndexFactor","opacityRate","bubble","zStrokeOpacity","strokeOpacity","sizeRate","obs","records","record","attributeName","e","initUpdaters","initPlugins","background","elementStyle","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","plugins","push","updaters","loadCanvas","canvas","dataset","ariaHidden","offsetHeight","offsetWidth","getContext","newSize","oldSize","started","resizeFactor","needsRefresh","updateActualOptions","setDensity","manageListener","event","handler","addOptions","passive","capture","removeOptions","removeEventListener","EventListeners","_doMouseTouchClick","_canPush","mouseInteractivity","interactivity","mouse","mousePos","clickPosition","clickTime","Date","getTime","onClick","events","handleClickMode","setTimeout","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","dark","light","theme","themes","default","auto","loadTheme","_handleVisibilityChange","pauseOnBlur","hidden","pageHidden","pause","getAnimationStatus","play","_handleWindowResize","_resizeTimeout","clearTimeout","windowResize","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","pointerEvents","onHover","mouseMove","touchStart","touchMove","touchEndClick","mouseUp","mouseDown","touchEnd","mouseLeave","touchCancel","_manageListeners","detectType","detectsOn","_canvasEl$parentEleme","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChange","mediaMatch","addListener","oldThemeChange","removeListener","themeChange","ResizeObserver","_resizeObserver","unobserve","entries","target","_mouseDown","clicking","downPosition","_mouseTouchClick","handled","mousePosition","clickPositionValid","_mouseTouchMove","mouseEvent","clientRect","getBoundingClientRect","clientX","clientY","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","_mouseEvent$offsetX","_mouseEvent$offsetY","_mouseEvent$offsetX2","_mouseEvent$offsetY2","_canvasRect$left","_canvasRect$top","touchEvent","lastTouch","touches","_touchEnd","from","changedTouches","touch","_touches","delete","identifier","_touchEndClick","_touchStart","performance","now","addListeners","removeListeners","Background","BackgroundMaskCover","BackgroundMask","FullScreen","ClickEvent","DivEvent","el","elementId","ids","_data$ids","Parallax","force","smooth","HoverEvent","parallax","ResizeEvent","Events","onDiv","onclick","ondiv","onhover","_data$onClick","_data$onDiv","_data$onHover","tmp","Modes","engine","_engine","_container","interactors","interactor","loadModeOptions","Interactivity","modes","detect_on","_data$detectsOn","ManualParticle","_data$position$x","_data$position$y","_data$position$mode","Responsive","maxWidth","Infinity","ThemeDefault","Theme","ColorAnimation","HslAnimation","AnimatableColor","CollisionsAbsorb","CollisionsOverlap","retries","ParticlesBounceFactor","ParticlesBounce","Collisions","absorb","maxSpeed","overlap","MoveAngle","MoveAttract","rotateX","rotateY","_data$rotate$x","_data$rotate","_data$rotate$y","_data$rotate2","MoveCenter","MoveGravity","acceleration","inverse","MovePath","generator","MoveTrailFill","MoveTrail","OutModes","_data$bottom","_data$left","_data$right","_data$top","Spin","Move","attract","drift","gravity","path","outModes","spin","straight","vibrate","warp","collisions","noise","outMode","out_mode","_data$outModes","_data$path","RangedAnimationOptions","OpacityAnimation","opacity_min","Opacity","anim","_data$animation","ParticlesDensity","area","value_area","_data$width","_data$height","ParticlesNumber","density","limit","_data$limit","Shadow","charKey","charAltKey","imageKey","imageAltKey","polygonKey","polygonAltKey","Shape","loadShape","mainKey","altKey","altOverride","_this$options$mainKey","itemIsArray","emptyValue","mainDifferentValues","altDifferentValues","_this$options$altKey","character","_this$options$charKey","custom","_this$options$imageKe","images","polygon","_this$options$polygon","_value","_data$options","_data$image","_this$options$shape","SizeAnimation","size_min","Size","Stroke","ZIndex","velocityRate","ParticlesOptions","groups","number","reduceDuplicates","_data$move$collisions","_data$move","_data$move2","_data$stroke","_data$shape","group","_this$groups$group","strokeToLoad","loadOptions","loadParticlesOptions","sourceOptionsArr","sourceOptions","_len2","_key2","Options","_findDefaultTheme","_this$themes$find","_importPreset","preset","getPreset","autoPlay","detectRetina","duration","fpsLimit","manualParticles","pauseOnOutsideViewport","responsive","zLayers","backgroundMode","fps_limit","retina_detect","_data$detectRetina","_data$fpsLimit","_data$fullScreen","_this$_findDefaultThe","_this$_findDefaultThe2","optResponsive","sort","existingTheme","optTheme","setResponsive","defaultOptions","responsiveOptions","screen","availWidth","setTheme","chosenTheme","clientDarkMode","defaultTheme","InteractionManager","_interactors","getInteractors","_externalInteractors","_particleInteractors","isEnabled","interact","reset","fixOutMode","checkModes","diameter","coord","maxCoord","setCb","Particle","overrideOptions","_this","_calcPosition","_outModes$left","_outModes$right","_outModes$top","_outModes$bottom","tryCount","pluginPos","particlePosition","exactPosition","fixHorizontal","fixVertical","_checkOverlap","_calculateVelocity","moveOptions","rad","radOffset","collisionsOptions","overlapOptions","_getRollColor","_this$roll$angle","roll","backColor","alter","backFactor","backSum","_initPosition","_this$options$move$ce","_this$options$move$ce2","zIndexValue","initialPosition","moveCenter","outType","_loadShapeData","shapeOptions","shapeData","override","unbreakable","inRange","slow","pathGenerator","particleDestroyed","_this$bubble$color","_this$bubble$radius","_this$bubble$color2","strokeColor","_shapeData$fill","_shapeData$close","_drawer","lastPathTime","misplaced","maxDistance","ignoresResizeRatio","mainOptions","particlesOptions","shapeType","overrideShapeType","pathOptions","pathDelay","getPathGenerator","addPath","initParticle","initialVelocity","moveDecay","needsSort","lastZIndex","sides","getShapeDrawer","sideCountFunc","getSidesCount","mover","movers","particleInit","particleCreated","isInsideCanvas","isVisible","Point","QuadTree","rectangle","capacity","_subdivide","_subs","round","_divided","_points","insert","check","found","queryCircle","queryRectangle","qTreeRectangle","_applyDensity","manualCount","_options$number$densi","numberOptions","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","removeQuantity","densityOptions","_pushParticle","initializer","pool","pop","_nextId","canAdd","_array","_zArray","dispatchEvent","_removeParticle","zIdx","splice","_interactionManager","quadTree","getMovers","getUpdaters","addManualParticles","addParticle","countToRemove","update","condition","particlesInitialization","pathGenerators","groupOptions","j","_groupOptions$number","nb","pushing","removeAt","quantity","deleted","particlesToDelete","Set","particleUpdate","checkDelete","has","externalInteract","particlesInteract","zArray","Retina","devicePixelRatio","ratio","attractDistance","sizeAnimationSpeed","moveDistance","moveDrift","moveSpeed","guardCheck","loadContainerOptions","defaultPathGenerator","generate","Container","_intersectionManager","entry","isIntersecting","_nextFrame","_this$lastFrameTime","lastFrameTime","timestamp","initDelta","addLifeTime","alive","_delay","_duration","_lifeTime","_firstStart","_paused","_sourceOptions","_initialSourceOptions","_options","_eventListeners","IntersectionObserver","_intersectionObserver","addClickHandler","clickOrTouchHandler","posRetina","touched","touchMoved","touchStartHandler","touchMoveHandler","radiusX","radiusY","touchCancelHandler","mainArr","dom","idx","findIndex","refreshTime","_drawAnimationFrame","requestAnimationFrame","export","supported","blob","shapes","getSupportedShapes","availablePlugins","getAvailablePlugins","particlesSetup","_currentTheme","cancelAnimationFrame","needsUpdate","start","setNoise","noiseOrGenerator","setPath","pathOrGenerator","oldGenerator","_delayTimeout","HTMLElement","newMaxWidth","responsiveMaxWidth","EventDispatcher","_listeners","listener","arr","args","listeners","forEach","hasEventListener","removeAllEventListeners","getItemsFromInitializer","initializers","values","Plugins","_initializers","presets","addInteractor","initInteractor","addParticleMover","initMover","addParticleUpdater","initUpdater","addPathGenerator","addPlugin","getPlugin","addPreset","presetKey","addShapeDrawer","types","needsPlugin","Engine","_configs","_domArray","_eventDispatcher","_initialized","configs","config","version","addConfig","nameOrConfig","_nameOrConfig$name","interactorInitializer","moverInitializer","updaterInitializer","initOrRefresh","afterEffectOrRefresh","destroyOrRefresh","customDrawer","realInit","realAfterEffect","realDestroy","realRefresh","domItem","tagIdOrOptionsOrParams","loadFromArray","optionsOrIndex","isParams","_loadParams","tagId","pathConfigJson","setOnClickHandler","_params$id","_params$element","fallback","response","fetch","ok","json","getDataFromUrl","domContainer","getElementById","body","append","oldIndex","old","tagName","toLowerCase","existingCanvases","getElementsByTagName","appendChild","newItem","HslColorManager","_colorValue$hsl","_colorValue$hsl2","RgbColorManager","_colorValue$rgb","rgbColor","_colorValue$rgb2","rgbColorManager","hslColorManager","_options$color","_options$minDistance","_options$connectParti","_options$speed","_options$maxParticles","_options$sizeVariatio","_options$responsive","querySelector","links","minDistance","connectParticles","maxParticles","sizeVariations","_responsive$options","_responsive$options2","_responsive$options3","_responsive$options4","_responsive$options5","breakpoint","pauseAnimation","resumeAnimation","initPjs","particlesJS","pJSDom","loadJSON","catch","initParticlesJS","_particle$pathGenerat","applyPath","gravityOptions","gravityFactor","zVelocityFactor","BaseMover","_initSpin","_spinOptions$position","spinOptions","spinPos","spinCenter","spinAcceleration","_particle$retina","_particle$retina$move","_particle$retina2","_particle$retina2$mov","_particle$retina$maxS","particleOptions","slowFactor","getProximitySpeedFactor","baseSpeed","maxSize","updateFunc","maxCanvasSize","dxFixed","dyFixed","hDistance","vDistance","vel","applyDistance","loadBaseMover","addMover","CircleDrawer","circleRange","arc","_shapeData$angle","loadCircleShape","addShape","updateColorValue","valueAnimation","decrease","_colorValue$maxLoops","_colorValue$loops","_colorValue$maxLoops2","_colorValue$delayTime","_colorValue$delayTime2","_colorValue$delayTime3","_colorValue$delayTime4","_colorValue$velocity","_colorValue$decay","ColorUpdater","hAnimation","sAnimation","lAnimation","updateColor","loadColorUpdater","OpacityUpdater","opacityOptions","opacityAnimation","_particle$opacity$max","_particle$opacity$max2","_particle$opacity$loo","_particle$opacity$max3","_data$maxLoops","_data$loops","_data$maxLoops2","_data$decay","_data$delayTime","_data$delayTime2","_data$delayTime3","_data$delayTime4","minValue","maxValue","_data$velocity","_data$velocity2","checkDestroy","updateOpacity","loadOpacityUpdater","BounceOutMode","includes","particleBounce","newVelocity","minPos","bounceHorizontal","bounceVertical","DestroyOutMode","_delta","vx","vy","NoneOutMode","pRadius","OutOutMode","circVec","newDx","newDy","wrap","newPos","sizeValue","nextBounds","OutOfCanvasUpdater","_updateOutMode","loadOutModesUpdater","SizeUpdater","sizeAnimation","_particle$retina$size","_particle$size$maxLoo","_particle$size$maxLoo2","_particle$size$loops","_particle$size$maxLoo3","sizeVelocity","updateSize","loadSizeUpdater","loadBasic","loadEasingQuadPlugin","ExternalInteractorBase","Attract","Attractor","_clickAttract","finish","attractRadius","attractModeDistance","_processAttract","_hoverAttract","attractOptions","attractFactor","normVec","mouseMoveStatus","hoverEnabled","hoverMode","clickEnabled","clickMode","_particle$interactivi","loadExternalAttractInteraction","Bounce","Bouncer","_processBounce","_processMouseBounce","tolerance","bounceModeDistance","_singleSelectorBounce","querySelectorAll","elem","offsetLeft","offsetTop","loadExternalBounceInteraction","BubbleBase","BubbleDiv","Bubble","calculateBubbleValue","particleValue","modeValue","optionsValue","Bubbler","_clickBubble","mouseClickPos","bubbleOptions","bubbleModeDistance","_particle$opacity$val","durationEnd","distMouse","timeSpent","sizeData","bubbleObj","optValue","bubbleModeSize","particlesObj","_process","opacityData","_hoverBubbleColor","_hoverBubble","pointDistance","_hoverBubbleSize","_hoverBubbleOpacity","divBubble","finalColor","modeColor","bubbleColor","pColor","_divBubble$opacity","_options$interactivit","_particle$opacity$val2","_particle$opacity2","modeOpacity","optOpacity","modeSize","optSize","bubbleParam","bubbleDuration","bubbleDistance","particlesParam","pObjBubble","pObj","_singleSelectorHover","repulseRadius","loadExternalBubbleInteraction","ConnectLinks","Connect","lineLinked","line_linked","_data$links","lineStyle","connectOptions","connect","gradStop","sourcePos","destPos","midRgb","grad","createLinearGradient","addColorStop","gradient","drawConnection","_p1$retina$linksWidth","ls","drawConnectLine","linksWidth","Connector","connectModeDistance","connectModeRadius","slice","distMax","xDiff","yDiff","loadExternalConnectInteraction","GrabLinks","Grab","drawGrab","lineColor","_particle$retina$link","beginPos","colorLine","drawGrabLine","Grabber","grab","grabModeDistance","_grabLineOptions$colo","_particle$options$lin","grabLineOptions","lineOpacity","opacityLine","grabLineColor","linksOptions","loadExternalGrabInteraction","Pauser","loadExternalPauseInteraction","Push","particles_nb","_data$quantity","Pusher","pushOptions","loadExternalPushInteraction","Remove","Remover","removeNb","loadExternalRemoveInteraction","RepulseBase","RepulseDiv","Repulse","Repulser","_clickRepulse","repulseOptions","repulse","repulseDistance","repulseModeDistance","vect","_hoverRepulse","_processRepulse","divRepulse","_divRepulse$speed","repulseFactor","_singleSelectorRepulse","repulseOpts","hover","click","loadExternalRepulseInteraction","Slow","Slower","slowModeRadius","slowOptions","particlePos","dist","proximityFactor","loadExternalSlowInteraction","InterlaceOffsets","InterlaceSteps","ByteStream","bytes","Uint8ClampedArray","getString","reduce","acc","curr","String","fromCharCode","nextByte","nextTwoBytes","readSubBlocks","blockString","readSubBlocksBin","len","blockData","Uint8Array","skipSubBlocks","parseColorTable","byteStream","colors","parseBlock","gif","avgAlpha","getFrameIndex","getTransparencyIndex","progressCallback","frame","frames","packedByte","localColorTableFlag","interlacedFlag","sortFlag","reserved","localColorCount","localColorTable","getColor","globalColorTable","ImageData","colorSpace","DOMException","EvalError","minCodeSize","imageData","clearCode","readBits","bytePos","bitPos","code","dic","pass","pixelPos","lineIndex","last","bitmap","createImageBitmap","parseImageBlock","GCreserved","disposalMethod","userInputDelayFlag","transparencyFlag","transparencyIndex","applicationExtension","authenticationCode","applicationExtensions","comments","plainTextData","charSize","foregroundColor","text","parseExtensionBlock","currentColorRegex","loadImage","loading","Image","loadGifImage","_getGIFLoopAmount","gifData","gifURL","buffer","arrayBuffer","totalTime","colorRes","pixelAspectRatio","globalColorTableFlag","globalColorCount","backgroundColorIndex","copyWithin","frameIndex","incrementFrameIndex","getframeIndex","increment","message","decodeGIF","gifLoopCount","extension","NaN","getGIFLoopAmount","downloadSvgImage","svgData","replaceImageColor","_imageData$replaceCol","svgColoredData","imageShape","colorStyle","preFillIndex","substring","replaceColorSvg","imageRes","replaceColor","replace_color","svg","Blob","domUrl","URL","webkitURL","createObjectURL","revokeObjectURL","img2","ImageDrawer","loadImageShape","_imageShape$replaceCo","addImage","_particle$gifFrame","offscreenCanvas","OffscreenCanvas","offscreenContext","_image$gifLoopCount","imageSmoothingQuality","imageSmoothingEnabled","gifFrame","gifTime","scale","putImageData","previousImageData","getImageData","preload","_ref2","_imageData$fill","_imageData$close","_image$ratio","Preload","ImagePreloaderPlugin","preloadOptions","existing","addLoadImageToEngine","_data$gif","_data$name","imageFunc","_data$name2","preloader","LifeDelay","LifeDuration","Life","LifeUpdater","lifeOptions","life","justSpawned","widthRange","heightRange","loadLifeUpdater","LineDrawer","_shapeData$cap","lineCap","cap","loadLineShape","ParallaxMover","parallaxOptions","parallaxForce","canvasCenter","parallaxSmooth","centerDistance","loadParallaxMover","ParticlesInteractorBase","_p1$retina$attractDis","ax","ay","p1Factor","p2Factor","loadParticlesAttractInteraction","updateAbsorb","r2","fixBounceSpeed","collisionMaxSpeed","resolveCollision","Collider","radius1","radius2","loadParticlesCollisionsInteraction","CircleWarp","rect","circle","biggerCircle","rectSW","LinksShadow","LinksTriangle","frequency","Links","triangles","getLinkDistance","optDistance","absDiffs","warpDistances","Linker","_setColor","linkContainer","linksColor","linksColors","_p1$retina$linksDista","linkOpt1","linksDistance","linkOpt2","_source$links","loadLinksInteraction","setLinkFrequency","dictionary","join","LinkInstance","_drawLinkLine","link","p1LinksOptions","_p1$options$twinkle","twinkle","lines","twinkleFreq","twinkleRgb","drawn","pi1","pi2","endNE","d1","yi","endSW","d2","xi","endSE","d3","drawLinkLine","_drawLinkTriangle","link1","link2","_triangleOptions$opac","triangleOptions","opacityTriangle","_p1$retina$linksDista2","pos3","colorTriangle","drawLinkTriangle","_drawTriangles","p1Links","_options$links","_p2$options$links","_p2$links","vertices","linkFreq","_getLinkFrequency","vertex","_getTriangleFrequency","_freqs","LinksPlugin","loadLinksPlugin","loadParticlesLinksInteraction","PolygonDrawerBase","getCenter","side","getSidesData","sideCount","numerator","denominator","decimalSides","interiorAngleDegrees","interiorAngle","translate","_polygon$sides","nb_sides","PolygonDrawer","TriangleDrawer","loadGenericPolygonShape","loadTriangleShape","loadPolygonShape","RotateAnimation","Rotate","RotateUpdater","rotateOptions","rotateDirection","rotateAnimation","_particle$rotate$valu","_particle$rotate","_rotate$velocity","_rotate$decay","updateRotate","loadRotateUpdater","fixFactor","SquareDrawer","fixedRadius","fixedDiameter","loadSquareShape","StarDrawer","_particle$starInset","inset","starInset","_star$sides","star","_star$inset","loadStarShape","StrokeColorUpdater","_stroke$opacity","_stroke$color","_rangeColorToHsl","strokeAnimation","strokeHslColor","updateStrokeColor","loadStrokeColorUpdater","validTypes","TextDrawer","_character$style","_character$weight","_character$font","textData","randomIndexData","fillText","strokeText","promises","all","loadTextShape","loadSlim"],"sourceRoot":""}