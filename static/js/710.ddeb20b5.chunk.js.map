{"version":3,"file":"static/js/710.ddeb20b5.chunk.js","mappings":"uOAEO,MAAMA,EAAYC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+BAIrBC,EAAYH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,uKAOXG,GAAKA,EAAEC,MAAMC,OAAOC,QAG9BC,EAAWT,EAAAA,GAAAA,EAAQU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,8B,aCTjB,SAASS,IACpB,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,KAC3C,QAACC,IAAWC,EAAAA,EAAAA,OACXC,EAAWC,IAAgBJ,EAAAA,EAAAA,WAAS,GA2B7C,OAxBEK,EAAAA,EAAAA,YAAU,KACL,IAAKJ,EACF,OAGgBK,WAEdF,GAAa,GAEf,IACI,MAAMG,QAAqBC,EAAAA,EAAAA,IAAkBP,GAE7CF,EAAgBQ,EAKpB,CAJE,MAAOE,GACLC,EAAAA,GAAAA,MAAY,sDAAuDD,EACvE,CAAC,QACGL,GAAa,EACjB,GAGJO,EAAa,GAEd,CAACV,KAGJW,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CAC8B,IAAxBhB,EAAaiB,QACbC,EAAAA,EAAAA,KAAA,KAAAF,SAAG,+CAEGE,EAAAA,EAAAA,KAAC/B,EAAS,CAAA6B,SACLhB,EAAamB,KAAIC,IAAA,IAAC,GAAEC,EAAE,OAAEC,EAAM,QAAEC,GAASH,EAAA,OACpCN,EAAAA,EAAAA,MAACvB,EAAS,CAAAyB,SAAA,EACNF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,WAASM,MACbJ,EAAAA,EAAAA,KAACrB,EAAQ,CAAAmB,SAAEO,MAFCF,EAGJ,MAK/BhB,IAAaa,EAAAA,EAAAA,KAACM,EAAAA,EAAM,MAG3B,C,mFCtDCC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,MAAMC,EAAU,mCACJC,EAAsBnB,UAC/B,IACI,MAAMoB,EAAS,CACXC,QAASH,EACTI,SAAU,UAER,KAAEC,SAAeN,EAAAA,EAAAA,IAAU,oBAAqB,CAAEG,WAC5D,OAAOG,EAAKC,OAGZ,CAFE,MAAOrB,GACL,MAAMA,CACV,GAGSsB,EAAczB,UACvB,IACI,MAAMoB,EAAS,CACXC,QAASH,EACTQ,MAAOA,EACPC,eAAe,EACfL,SAAU,QACVM,KAAM,IAEJ,KAAEL,SAAeN,EAAAA,EAAAA,IAAU,gBAAiB,CAAEG,WACzD,OAAOG,EAAKC,OAGX,CAFE,MAAOrB,GACL,MAAMA,CACV,GAGS0B,EAAoB7B,UAC7B,IACI,MAAMoB,EAAS,CACXC,QAASH,EACTI,SAAU,UAER,KAAEC,SAAeN,EAAAA,EAAAA,IAAU,UAADa,OAAWnC,GAAW,CAAEyB,WACxD,OAAOG,CAGX,CAFE,MAAOpB,GACL,MAAMA,CACV,GAGS4B,EAAiB/B,UAC1B,IACI,MAAMoB,EAAS,CACXC,QAASH,EACTI,SAAU,UAER,KAAEC,SAAeN,EAAAA,EAAAA,IAAU,UAADa,OAAWnC,EAAO,YAAY,CAAEyB,WAClE,OAAOG,EAAKS,IAGd,CAFE,MAAO7B,GACL,MAAMA,CACV,GAGSD,EAAoBF,UAC7B,IACI,MAAMoB,EAAS,CACXC,QAASH,EACTI,SAAU,QACVM,KAAM,IAEJ,KAAEL,SAAeN,EAAAA,EAAAA,IAAU,UAADa,OAAWnC,EAAO,YAAY,CAAEyB,WACnE,OAAOG,EAAKC,OAGb,CAFE,MAAOrB,GACL,MAAMA,CACV,E","sources":["components/Reviews/Reviews.style.js","components/Reviews/Reviews.js","components/Services/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsUl = styled.ul`\n  margin-top: 12px;\n`;\n\nexport const ReviewsLi = styled.li`\n  font-size: 14px;\n  padding: 6px;\n  width: 1250px;\n  margin-bottom: 16px;\n  border: 1px solid gray;\n  border-radius: 4px;\n  background-color:  ${p => p.theme.colors.white}; \n`;\n\nexport const ReviewsP = styled.p`\n  margin-top: 6px;\n`;","import { Loader } from \"components/Loader/Loader\";\nimport { fetchMovieReviews } from \"components/Services/Api\";\nimport { useEffect, useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport { useParams } from \"react-router-dom\";\nimport { ReviewsLi, ReviewsP, ReviewsUl } from \"./Reviews.style\";\n\nexport default function Reviews() {\n    const [movieReviews, setMovieReviews] = useState([]);\n    const {movieId} = useParams();\n    const [isLoading, setIsLoading] = useState(false);\n   \n\n    useEffect(() => {\n         if (!movieId) {\n            return;\n          }\n\n        const reviewsFilm = async () => {\n\n              setIsLoading(true);\n\n            try {\n                const reviewsMovie = await fetchMovieReviews(movieId);\n               \n                setMovieReviews(reviewsMovie);\n            } catch (error) {\n                toast.error('Oops! Something went wrong. Please try again later.', error);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n   \n        reviewsFilm();\n    \n    }, [movieId]); \n\n  return (\n    <>      \n         {movieReviews.length === 0 ? (\n          <p>We don't have any reviews for this movie.</p>\n          ) : (\n                <ReviewsUl>\n                    {movieReviews.map(({ id, author, content }) => (\n                          <ReviewsLi key={id}>\n                              <h3>Author: {author}</h3>\n                              <ReviewsP>{content}</ReviewsP>\n                          </ReviewsLi>                     \n                      ))\n                    }\n                 </ReviewsUl>\n          )} \n      {isLoading && <Loader />}\n    </>\n  );\n};\n\n\n\n\n\n","import axios from \"axios\";\n axios.defaults.baseURL = 'https://api.themoviedb.org/3';\n const API_KEY = 'da8b391557d6a67d7aa1304dede81c1a';\nexport const fetchTrendingMovies = async () => {   \n    try {\n        const params = {\n            api_key: API_KEY,\n            language: 'en-US',\n        };\n        const { data } = await axios.get(`/trending/all/day`, { params });\n    return data.results;\n    } catch (error) {\n        throw error;\n    }   \n}\n\nexport const fetchMovies = async (query) => {   \n    try {\n        const params = {\n            api_key: API_KEY,\n            query: query,\n            include_adult: false,\n            language: 'en-US',\n            page: 1,\n        };\n        const { data } = await axios.get(`/search/movie`, { params });\n   return data.results;\n    } catch (error) {\n        throw error;\n    }   \n}\n\nexport const fetchMovieDetails = async (movieId) => {\n    try {\n        const params = {\n            api_key: API_KEY,\n            language: 'en-US',\n        };\n        const { data } = await axios.get(`/movie/${movieId}`, { params });\n        return data;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport const fetchMovieCast = async (movieId) => {   \n    try {\n        const params = {\n            api_key: API_KEY,           \n            language: 'en-US',\n        };\n        const { data } = await axios.get(`/movie/${movieId}/credits`, { params });\n      return data.cast;\n    } catch (error) {\n        throw error;\n    }   \n}\n\nexport const fetchMovieReviews = async (movieId) => {   \n    try {\n        const params = {\n            api_key: API_KEY,           \n            language: 'en-US',\n            page: 1,\n        };\n        const { data } = await axios.get(`/movie/${movieId}/reviews`, { params });\n     return data.results;\n    } catch (error) {\n        throw error;\n    }   \n}\n\n\n\n"],"names":["ReviewsUl","styled","_templateObject","_taggedTemplateLiteral","ReviewsLi","_templateObject2","p","theme","colors","white","ReviewsP","_templateObject3","Reviews","movieReviews","setMovieReviews","useState","movieId","useParams","isLoading","setIsLoading","useEffect","async","reviewsMovie","fetchMovieReviews","error","toast","reviewsFilm","_jsxs","_Fragment","children","length","_jsx","map","_ref","id","author","content","Loader","axios","API_KEY","fetchTrendingMovies","params","api_key","language","data","results","fetchMovies","query","include_adult","page","fetchMovieDetails","concat","fetchMovieCast","cast"],"sourceRoot":""}