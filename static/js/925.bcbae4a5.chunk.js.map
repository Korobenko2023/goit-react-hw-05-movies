{"version":3,"file":"static/js/925.bcbae4a5.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.js","Pages/MovieDetails/MovieDetails.styled.js","Pages/MovieDetails/MovieDetails.js","components/Services/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieContainer = styled.div`\n  max-width: 95%;\n  padding-bottom: ${p => p.theme.spasing(4)};\n  margin-bottom: ${p => p.theme.spasing(4)};\n  display: flex;\n  gap: ${p => p.theme.spasing(4)};\n  border-bottom: 1px solid ${p => p.theme.colors.MediumBlue}; \n`;\n\nexport const Descriprion = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spasing(2)};\n`;","import { Link } from \"react-router-dom\";\nimport { Descriprion, MovieContainer } from \"./MovieCard.styled\";\n\n\nexport const MovieCard = ({ description: { title,\n  vote_average,\n  genres,\n  overview,\n  poster_path,\n   runtime } }) => {\n\n  const imgStart = `https://image.tmdb.org/t/p/original/`;\n  const defaultImg =\n    'https://image.tmdb.org/t/p/original//nQvoM7BMswq1raENOkOjCBt94gk.jpg';\n\n  return (\n    <>\n       <MovieContainer>\n            <img src={poster_path ? imgStart + `${poster_path}` : defaultImg}\n               width={250}\n               alt={title} />  \n            <Descriprion>    \n               <h1>{title}</h1>\n               <p>Rating: {Math.round(vote_average)}</p>\n               <p>Duration: {runtime} min.</p>\n               <h2>Overview</h2>\n               <p>{overview}</p>\n               <h3>Genres</h3>\n               <ul>\n                 {genres?.map(genre => (\n                   <li key={genre.id}>{genre.name}</li>\n                 ))}\n               </ul>\n             </Descriprion>            \n        </MovieContainer>\n        <div>             \n               <h2>Additional information</h2>\n                 <ul>\n                   <li>\n                     <Link to=\"cast\">Cast</Link>\n                   </li>                   \n                   <li>\n                      <Link to=\"reviews\">Reviews</Link>\n                   </li>\n                 </ul>\n        </div>\n    </>       \n  )\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const LinkBack = styled(Link)`\n  margin-bottom: ${p => p.theme.spasing(4)};\n  display: flex;\n  gap: ${p => p.theme.spasing(1)};\n  align-items: center;\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.MediumBlue}; \n  }\n`;","import { Loader } from \"components/Loader/Loader\";\nimport { fetchMovieDetails } from \"components/Services/Api\";\nimport { Suspense, useEffect, useRef, useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport { Outlet, useLocation, useParams } from \"react-router-dom\";\nimport { GoArrowLeft } from \"react-icons/go\";\nimport { MovieCard } from \"components/MovieCard/MovieCard\";\nimport { LinkBack } from \"./MovieDetails.styled\";\n\nexport default function MovieDetails() {\n    const [movieDescription, setMovieDescription] = useState({});\n    const {movieId} = useParams();\n    const [isLoading, setIsLoading] = useState(false);\n    const location = useLocation();\n    const backLink = useRef(location.state?.from ?? '/');\n\n    useEffect(() => {\n         if (!movieId) {\n            return;\n          }\n\n        const detailsFilm = async () => {\n\n              setIsLoading(true);\n\n            try {\n                const movieById = await fetchMovieDetails(movieId);\n               \n                setMovieDescription(movieById);\n            } catch (error) {\n                toast.error('Oops! Something went wrong. Please try again later.', error);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n   \n        detailsFilm();\n    \n    }, [movieId]);\n\n    return (\n        <div>\n            <LinkBack to={backLink.current}><GoArrowLeft />Go back</LinkBack>           \n            <MovieCard description={movieDescription} />\n             {isLoading && <Loader />}           \n            <Suspense fallback={<Loader />}>\n                <Outlet />\n            </Suspense>          \n        </div>);\n};\n\n","import axios from \"axios\";\n axios.defaults.baseURL = 'https://api.themoviedb.org/3';\n const API_KEY = 'da8b391557d6a67d7aa1304dede81c1a';\nexport const fetchTrendingMovies = async () => {   \n    try {\n        const params = {\n            api_key: API_KEY,\n            language: 'en-US',\n        };\n        const { data } = await axios.get(`/trending/all/day`, { params });\n    return data.results;\n    } catch (error) {\n        throw error;\n    }   \n}\n\nexport const fetchMovies = async (query) => {   \n    try {\n        const params = {\n            api_key: API_KEY,\n            query: query,\n            include_adult: false,\n            language: 'en-US',\n            page: 1,\n        };\n        const { data } = await axios.get(`/search/movie`, { params });\n   return data.results;\n    } catch (error) {\n        throw error;\n    }   \n}\n\nexport const fetchMovieDetails = async (movieId) => {\n    try {\n        const params = {\n            api_key: API_KEY,\n            language: 'en-US',\n        };\n        const { data } = await axios.get(`/movie/${movieId}`, { params });\n        return data;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport const fetchMovieCast = async (movieId) => {   \n    try {\n        const params = {\n            api_key: API_KEY,           \n            language: 'en-US',\n        };\n        const { data } = await axios.get(`/movie/${movieId}/credits`, { params });\n      return data.cast;\n    } catch (error) {\n        throw error;\n    }   \n}\n\nexport const fetchMovieReviews = async (movieId) => {   \n    try {\n        const params = {\n            api_key: API_KEY,           \n            language: 'en-US',\n            page: 1,\n        };\n        const { data } = await axios.get(`/movie/${movieId}/reviews`, { params });\n     return data.results;\n    } catch (error) {\n        throw error;\n    }   \n}\n\n\n\n"],"names":["MovieContainer","styled","_templateObject","_taggedTemplateLiteral","p","theme","spasing","colors","MediumBlue","Descriprion","_templateObject2","MovieCard","_ref","description","title","vote_average","genres","overview","poster_path","runtime","_jsxs","_Fragment","children","_jsx","src","concat","width","alt","Math","round","map","genre","name","id","Link","to","LinkBack","MovieDetails","_location$state$from","_location$state","movieDescription","setMovieDescription","useState","movieId","useParams","isLoading","setIsLoading","location","useLocation","backLink","useRef","state","from","useEffect","async","movieById","fetchMovieDetails","error","toast","detailsFilm","current","GoArrowLeft","Loader","Suspense","fallback","Outlet","axios","API_KEY","fetchTrendingMovies","params","api_key","language","data","results","fetchMovies","query","include_adult","page","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}