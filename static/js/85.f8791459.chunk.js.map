{"version":3,"file":"static/js/85.f8791459.chunk.js","mappings":"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","sources":["components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.js","Pages/Movies/Movies.js","components/MoviesList/MoviesList.styled.js","components/FallingStars/FallingStars.js","components/MoviesList/MoviesList.js","components/Services/Api.js"],"sourcesContent":["import styled from 'styled-components';\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  max-width: 600px;\n  gap: ${p => p.theme.spasing(1)};\n  overflow: hidden;\n  margin-bottom: ${p => p.theme.spasing(7)};\n`;\n  \nexport const SearchInput = styled.input`\n  padding-bottom: ${p => p.theme.spasing(1)};  \n  padding-left: ${p => p.theme.spasing(2)};  \n  width: 100%;\n  height: 40px;\n  font-size: 20px;\n  border: 1px solid black;\n  border-radius: ${p => p.theme.radii.sm};\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1); \n  &:hover,\n  &:focus,\n  &.active {\n    border-color: ${p => p.theme.colors.MediumBlue}; \n  }\n  outline: none; \n  &::placeholder {\n    font-size: 16px;\n    padding-left: ${p => p.theme.spasing(2)};  \n   \n  }\n`;\n\nexport const SearchButton = styled.button`\n  padding-bottom: ${p => p.theme.spasing(1)};  \n  width: 200px;\n  height: 40px;\n  border: 1px solid black;\n  border-radius: ${p => p.theme.radii.sm};\n  outline: none;\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1), background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus,\n  &.active {\n    border-color: ${p => p.theme.colors.MediumBlue}; \n    background-color: ${p => p.theme.colors.MediumSlateBlue};\n  } \n`;","import { useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport { SearchButton, SearchForm, SearchInput } from \"./Searchbar.styled\";\n\nexport const Searchbar = ({ setSearchParams }) => {\n    const [query, setQuery] = useState('');\n  \n    const handleSearch = (e) => {\n        setQuery(e.target.value.toLowerCase());\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (query.trim() === '') {\n            toast.error(\"Please fill the field!\");\n            return;\n        }\n        setSearchParams({ query });\n        setQuery('');\n    };\n \n    return (\n        <SearchForm onSubmit={handleSubmit}>\n          <SearchInput\n            name=\"searchQuery\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            value={query}\n            onChange={handleSearch}\n            />\n          <SearchButton type=\"submit\">Search</SearchButton>\n        </SearchForm>\n    );\n};","import { Loader } from \"components/Loader/Loader\";\nimport { MoviesList } from \"components/MoviesList/MoviesList\";\nimport { Searchbar } from \"components/Searchbar/Searchbar\";\nimport { fetchMovies } from \"components/Services/Api\";\nimport { useEffect, useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport { useSearchParams } from \"react-router-dom\";\n\nexport default function Movies() {\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [isLoading, setIsLoading] = useState(false);\n    const currentQuery = searchParams.get('query') ?? '';\n\n    useEffect(() => {       \n        \n        if (!currentQuery) return;        \n        \n        const searchFilms = async () => {  \n            \n            setIsLoading(true);           \n\n            try {\n                const moviesQuery = await fetchMovies(currentQuery);\n                if (moviesQuery.length === 0) {\n                    toast.error('Sorry, there are no movies matching your search query. Please try again.');\n                    return;\n                }\n                setMovies(moviesQuery);\n            } catch (error) {\n               toast.error('Oops! Something went wrong. Please try again later.');                 \n            } finally {\n                setIsLoading(false);\n            }\n        };\n   \n        searchFilms();\n    \n    }, [currentQuery]);  \n\n return (\n    <>\n         <Searchbar setSearchParams={setSearchParams} />\n         {isLoading && <Loader />}\n         {movies.length > 0 && <MoviesList movies={movies} />}\n    </>\n    )\n};","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MoviesUl = styled.ul`\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;  \n  gap: ${p => p.theme.spasing(4)};\n  margin: auto;\n`;\n\nexport const FallingStarsWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: -1; \n`;\n\nexport const MoviesLi = styled.li`\n  position: relative;\n  flex-basis: calc((100% - 64px) / 5); \n`;\n\nexport const MoviesLink = styled(NavLink)` \n    color: ${p => p.theme.colors.black}; \n    font-size: 18px;\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n   &:hover,\n   &:focus {\n    color: ${p => p.theme.colors.Orange};     \n  }\n`;\n\nexport const MoviesImg = styled.img`\n background-size: cover;\n width: 100%; \n border-radius: ${p => p.theme.spasing(3)};\n`;\n\nexport const Title = styled.p`  \n  margin-top: ${p => p.theme.spasing(3)};\n  font-size: 16px;\n  font-weight: 500;\n  text-align: center;\n`;\n\n","import { useCallback } from \"react\";\nimport Particles from \"react-particles\";\nimport { loadSlim } from \"tsparticles-slim\";\n\nexport const FallingStars = () => {\n\n   const particleColors = [\"#FFA500\", \"#00fffc\"];\n\n  const particlesInit = useCallback(async (engine) => {\n    await loadSlim(engine);\n  }, []);\n\n  const particlesLoaded = useCallback(async (container) => {\n    return null;\n  }, []);\n\n  const getRandomColor = () => {\n    const randomIndex = Math.floor(Math.random() * particleColors.length);\n    return particleColors[randomIndex];\n  };\n\n  return (\n    <Particles\n      id=\"tsparticles\"\n      init={particlesInit}\n      loaded={particlesLoaded}\n      options={{\n        particles: {\n          number: {\n        value: 100, // Кількість частинок (зірок)\n        density: {\n          enable: true,\n          value_area: 800,\n        },\n          },\n      shape: {\n        type: 'star', // Форма частинок\n        stroke: {\n          width: 2,\n           color: getRandomColor(),        \n        },\n        polygon: {\n          nb_sides: 5, // Кількість сторін зірки\n        },\n      },\n      size: {\n        value: 4, // Розмір частинок (зірок)\n        random: true,\n        anim: {\n          enable: true,\n          speed: 4,\n          size_min: 0.1,\n          sync: false,\n        },\n          },\n          opacity: {\n            value: 0.8, // Прозорість частинок (зірок)\n            random: true,\n            anim: {\n              enable: true,\n              speed: 1,\n              opacity_min: 0.1,\n              sync: false,\n            },\n          },\n          move: {\n            direction: 'bottom', \n            enable: true,\n            speed: { min: 1, max: 1 },\n            straight: false, \n            outMode: 'out', \n          },\n        },\n      }}      \n    />\n  );\n};\n","import { useLocation } from \"react-router-dom\";\nimport { FallingStarsWrapper, MoviesImg, MoviesLi, MoviesLink, MoviesUl, Title } from \"./MoviesList.styled\";\nimport { FallingStars } from \"components/FallingStars/FallingStars\";\n\nexport const MoviesList = ({ movies }) => {\n    const location = useLocation();\n    return (\n        <MoviesUl>\n            <FallingStarsWrapper>\n               <FallingStars />\n            </FallingStarsWrapper>            \n            {movies.map(({ id, name, title, poster_path }) => (\n                <MoviesLi key={id}>\n                    <MoviesLink to={`/movies/${id}`} state={{ from: location }}> \n                        <MoviesImg src={poster_path\n                            ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                            : 'https://image.tmdb.org/t/p/original//nQvoM7BMswq1raENOkOjCBt94gk.jpg'\n                        }\n                            alt={name || title}\n                            width={160} \n                    />\n                     <Title>{name || title}</Title>\n                    </MoviesLink>\n                </MoviesLi>\n            ))}\n        </MoviesUl>\n    )\n\n};\n\n","import axios from \"axios\";\n axios.defaults.baseURL = 'https://api.themoviedb.org/3';\n const API_KEY = 'da8b391557d6a67d7aa1304dede81c1a';\nexport const fetchTrendingMovies = async () => {   \n    try {\n        const params = {\n            api_key: API_KEY,\n            language: 'en-US',\n        };\n        const { data } = await axios.get(`/trending/movie/day`, { params });\n    return data.results;\n    } catch (error) {\n        throw error;\n    }   \n}\n\nexport const fetchMovies = async (query) => {   \n    try {\n        const params = {\n            api_key: API_KEY,\n            query: query,\n            include_adult: false,\n            language: 'en-US',\n            page: 1,\n        };\n        const { data } = await axios.get(`/search/movie`, { params });\n   return data.results;\n    } catch (error) {\n        throw error;\n    }   \n}\n\nexport const fetchMovieDetails = async (movieId) => {\n    try {\n        const params = {\n            api_key: API_KEY,\n            language: 'en-US',\n        };\n        const { data } = await axios.get(`/movie/${movieId}`, { params });\n        return data;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport const fetchMovieCast = async (movieId) => {   \n    try {\n        const params = {\n            api_key: API_KEY,           \n            language: 'en-US',\n        };\n        const { data } = await axios.get(`/movie/${movieId}/credits`, { params });\n      return data.cast;\n    } catch (error) {\n        throw error;\n    }   \n}\n\nexport const fetchMovieReviews = async (movieId) => {   \n    try {\n        const params = {\n            api_key: API_KEY,           \n            language: 'en-US',\n            page: 1,\n        };\n        const { data } = await axios.get(`/movie/${movieId}/reviews`, { params });\n     return data.results;\n    } catch (error) {\n        throw error;\n    }   \n}\n\n\n\n"],"names":["SearchForm","styled","_templateObject","_taggedTemplateLiteral","p","theme","spasing","SearchInput","_templateObject2","radii","sm","colors","MediumBlue","SearchButton","_templateObject3","MediumSlateBlue","Searchbar","_ref","setSearchParams","query","setQuery","useState","_jsxs","onSubmit","e","preventDefault","trim","toast","children","_jsx","name","type","autoComplete","autoFocus","placeholder","value","onChange","target","toLowerCase","Movies","_searchParams$get","movies","setMovies","searchParams","useSearchParams","isLoading","setIsLoading","currentQuery","get","useEffect","async","moviesQuery","fetchMovies","length","error","searchFilms","_Fragment","Loader","MoviesList","MoviesUl","FallingStarsWrapper","MoviesLi","MoviesLink","NavLink","_templateObject4","black","Orange","MoviesImg","_templateObject5","Title","_templateObject6","FallingStars","particleColors","particlesInit","useCallback","loadSlim","engine","particlesLoaded","Particles","id","init","loaded","options","particles","number","density","enable","value_area","shape","stroke","width","color","getRandomColor","randomIndex","Math","floor","random","polygon","nb_sides","size","anim","speed","size_min","sync","opacity","opacity_min","move","direction","min","max","straight","outMode","location","useLocation","map","_ref2","title","poster_path","to","concat","state","from","src","alt","axios","API_KEY","fetchTrendingMovies","params","api_key","language","data","results","include_adult","page","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}